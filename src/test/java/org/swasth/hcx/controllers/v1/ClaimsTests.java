package org.swasth.hcx.controllers.v1;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.test.web.servlet.MvcResult;
import org.swasth.hcx.controllers.BaseSpec;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;


public class ClaimsTests extends BaseSpec {

    @Value("${hcx_application.api_version}")
    private String api_version;
  
  @Test
  public void check_claim_submit_success_scenario() throws Exception {
      postgresService.execute("DROP TABLE IF EXISTS mock_participant");
      postgresService.execute("CREATE TABLE mock_participant (" +
              "parent_participant_code character varying," +
              "child_participant_code character varying NOT NULL PRIMARY KEY," +
              "primary_email character varying," +
              "password character varying," +
              "private_key character varying" +
              ");");
      postgresService.execute("INSERT INTO mock_participant (parent_participant_code, child_participant_code, primary_email, password, private_key) " +
              "VALUES ('hosp_hcx_955522@swasth-hcx-dev', 'payr_hcxmoc_903588@swasth-hcx-dev', 'lagertha+mock_payor@yopmail.com', 'Opensaber@123', '-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDAQLG7dTHuSE1F 8L46wS84SCU4Pf+ofSB8/h8tlyUHCw2SmY3CRZ3Uz1Jtw87UCdEvaSqs4YvkdKIh 1Nt04xpunUufUYNx6wBx/S/nuG7zcUu+bQeO1SpeEAA6+4HvnAyVBc+YCctnyREr Pgigs8MJG6dMA2rEap1na8VTrVN6JNNhcJxqnCyMoZ/aJIrmRxMj0Eh55LC20AZh jkxt5q/12qarpc/0ItQ2nv11fucojVVQyQGBaeqULVM9fGXbtquLXnRLJWzTLuSN Zk3Z+NpZZ5W7gxyBsxGTc7ccWp5edOxMXK3wELxsqirT0EOIz2ZMEYVbWrCyxfGC WYGUGRkPAgMBAAECggEACRAjsMweDfcfmW/3b8qioLsZ8hROJJG9gdby/lG1P6dA PQx7F9DzV1BsuNr1uZ4628rP5bV+REdRS1n+/HwmR1en9HtBwJGNBFKkuv5BUL2j DfeS1yNqa2PCtwUbQ4HuP+o1tpujmKFsa0bx3i2LQLcqhFVW56qFABafB0pQ+J2F 5MIgoS3e84Q/4oHYhxcRCgINQRoWKkqLGdAMg83NGe/G97PHGW9PPG9AQnfVhqey adov6rO/VOhbEYoKIwBq4G2qFnq6GwxDsx+wKl7SMVIwJzk8lRd5IaCGNscGEirU f/1PKxRT5WR735wyFyqLtSATFlrvH+sIiKsYR0PRlQKBgQDewV/umGidbm4jcmYR PFW53Ipr05lz4VNUOxdI/NIQ5jNfwjTE7Ep4R2xWycgzFwtoYYzWOhgHfSEcQ7KH 4z7w5Oe5CO+NB9viTxsrRx/kc6KU5cr3iqYCQzu2IaaVL2n6a0dDWR1ZXSGckKCf RWENuPkU9BAMn5LqEbcxVkSp6wKBgQDc8e4tMef6jpX5i8UEtd3y0HE302I1opfM 7Sdl5KVYsTOcTVobYM3niRKGtaY26EP7JCI2D0rCGS/DpDmsf7v5uHD4pZ4whRGR uhj64NIzveG3goki/ZerFZTc83mBxcaSBg48XL2x4oy32d0YXRC5IqEZ5vAIo7JE PlOZgKZAbQKBgQCVlVN/XHc76NErGoIx5stGYTPOzqxIZbJYaMntKGFEGeG71yUq a+ZiOMwmx5+Zt0rg0EkL/rzuInfejBNSLyawC3cUCU0b7oAYy7hZ6owfFAvEYz9V 1ZQ/BrkNSDGeEtXe5LVZI3mS7fhJM9G4wpU26tTQ3kf8whec+UKEbgLz+wKBgH1H EG2/5nFDd/ZPMh9Bn9+WIRwuV3liAADKV5SG2No5X7I4iecMNLQcHM0VInHvsNwt 2NgeQ51a+qJL9AfDRaqK0kOqZM/OI/AlPRTDdWyxNdL/yRJ2CBGR4x6FT1gt9DHI DTpcu5KpinCUr7Co1FqlMAOn1mKPrvzS+kQHljzhAoGBAL2Ui1c/qrX9ezggR78D WTK8u4QkvSdOoSDVbOes1FYEExHWh8hvRfO4PLTzlK58MJJnWj9hgiMItWzI7Iic pOEsHqgNl19VjdtKEloRAe5HYuC0pTTNTXo7qhq/De1wPr/lM82jofNXzpSpDetU 43Q9DXQ5KNiBbsKedfkRhJdY\n-----END PRIVATE KEY-----')");
      postgresService.execute("DROP TABLE IF EXISTS payersystem_data");
      postgresService.execute("CREATE TABLE payersystem_data (\n" +
              "    request_id character varying not null PRIMARY KEY,\n" +
              "    sender_code character varying,\n" +
              "    recipient_code character varying,\n" +
              "    action character varying,\n" +
              "    raw_payload character varying,\n" +
              "    request_fhir character varying,\n" +
              "    response_fhir character varying,\n" +
              "    status character varying,\n" +
              "    additional_info jsonb,\n" +
              "    created_on bigint,\n" +
              "    updated_on bigint,\n" +
              "    on_action_status character varying,\n" +
              "    correlation_id character varying,\n" +
              "    mobile character varying,\n" +
              "    otp_verification character varying,\n" +
              "    workflow_id character varying,\n" +
              "    account_number character varying,\n" +
              "    ifsc_code character varying,\n" +
              "    bank_details character varying,\n" +
              "    app character varying,\n" +
              "    supporting_documents jsonb,\n" +
              "    bill_amount character varying,\n" +
              "    insurance_id character varying,\n" +
              "    patient_name character varying,\n" +
              "    service_type character varying\n" +
              ");\n");
      postgresService.execute("INSERT INTO payersystem_data" +
              "(request_id, sender_code, recipient_code, action, raw_payload, request_fhir, response_fhir, status, additional_info, created_on, updated_on, on_action_status, correlation_id, mobile, otp_verification, workflow_id, account_number, ifsc_code, bank_details, app, supporting_documents, bill_amount, insurance_id, patient_name, service_type)" +
              "VALUES" + "('3730d51b-7371-4d34-8641-a005dadd2286', 'bsp_bsprol_846730@swasth-hcx-dev', 'payr_hcxmoc_903588@swasth-hcx-dev', 'claim', 'eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6InBheXJfaGN4bW9jXzkwMzU4OEBzd2FzdGgtaGN4LWRldiIsIngtaGN4LXRpbWVzdGFtcCI6IjIwMjQtMDEtMjRUMDU6MDI6MTcrMDAwMCIsIngtaGN4LXNlbmRlcl9jb2RlIjoiYnNwX2JzcHJvbF84NDY3MzBAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6ImJlM2VjYjAzLTgzMGEtNDUxZi05NTNkLTZjNjU5OGIzNjhmZSIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6ImQ4Yzg2YzQyLTEwZjEtNDBlYS1iYjVlLTZjOTdjZWZjNWE4MSIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiMGEyOWVlMTktM2ZjNS00OTU4LTg0NzUtNzZmYzA5MzkzOGIwIn0.ZqUQ29KBWzeoQNebFdsOTrlew1aM_EUklDGcsfGK506XVscHHwQniGaaAkF0qlmJ5OXWOTAnWPlCu2Ndy7TpxzkQymNRiIISwBz7n-tcIgNwWUGdHDrSFb2E78rBPe6AtI94L4FqZatDJmRuCBt-RPwoWXURYeNCPIxTNQ_kljc_qPieyy8EjN-n3-AX5UurEjC9eDqhGQ-z4JKwSf7HlrFj7Ejge7orZFNmIjwM7uX1Gu6o9Hm0QC5HoQGOwD7_X5qLRDzSN5NlWcP2ebCZ3qrcDiswAfDDFF8qqyI_-yhSeIXZNzfBBsCkUJCqoOd4kh5RJc2gEfTfk4Qc7luz0g.bglbGPUzNezaxdR8..k0iJtq4ztHTr_7yf6eTFXA','{}','{ \"resourceType\": \"Bundle\", \"id\": \"3730d51b-7371-4d34-8641-a005dadd2286\", \"meta\": { \"lastUpdated\": \"2024-01-19T10:17:02.570+00:00\", \"profile\": [\"https://ig.hcxprotocol.io/v0.7.1/StructureDefinition-ClaimResponseBundle.html\"] }, \"identifier\": { \"system\": \"https://www.tmh.in/bundle\", \"value\": \"93d2f78b-897b-4581-aee3-5ea9ccf62e45\" }, \"type\": \"collection\", \"timestamp\": \"2024-01-19T10:17:00.421+00:00\", \"entry\": [ { \"fullUrl\": \"ClaimResponse/fe4216f5-6c38-4b8a-9664-8e090d9576e2\", \"resource\": { \"resourceType\": \"ClaimResponse\", \"id\": \"fe4216f5-6c38-4b8a-9664-8e090d9576e2\", \"meta\": { \"lastUpdated\": \"2024-01-19T10:17:02.570+00:00\", \"profile\": [\"https://ig.hcxprotocol.io/v0.7.1/StructureDefinition-ClaimResponse.html\"] }, \"identifier\": [ { \"system\": \"http://identifiersystem.com\", \"value\": \"b6bbfee4-075e-4c48-bbd8-7e09fa1bb54a\" } ], \"status\": \"active\", \"type\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/claim-type\", \"code\": \"institutional\" } ] }, \"use\": \"claim\", \"patient\": { \"reference\": \"Patient/RVH1003\" }, \"created\": \"2024-01-19T10:17:02+00:00\", \"insurer\": { \"reference\": \"Organization/GICOFINDIA\" }, \"requestor\": { \"reference\": \"Organization/WeMeanWell01\" }, \"request\": { \"reference\": \"Claim/CLAIM1\" }, \"outcome\": \"complete\", \"total\": [ { \"category\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/adjudication\", \"code\": \"benefit\" } ] }, \"amount\": { \"value\": 80000, \"currency\": \"INR\" } } ] } }, { \"fullUrl\": \"Organization/WeMeanWell01\", \"resource\": { \"resourceType\": \"Organization\", \"id\": \"WeMeanWell01\", \"meta\": { \"profile\": [\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Organization\"] }, \"identifier\": [ { \"type\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\", \"code\": \"AC\", \"display\": \"Narayana\" } ] }, \"system\": \"http://abdm.gov.in/facilities\", \"value\": \"HFR-ID-FOR-TMH\" } ], \"name\": \"BSP Role Mock User\", \"address\": [ { \"text\": \" Bannerghatta Road, Bengaluru \", \"city\": \"Bengaluru\", \"country\": \"India\" } ] } }, { \"fullUrl\": \"Organization/GICOFINDIA\", \"resource\": { \"resourceType\": \"Organization\", \"id\": \"GICOFINDIA\", \"meta\": { \"profile\": [\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Organization\"] }, \"identifier\": [ { \"type\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\", \"code\": \"AC\", \"display\": \"GOVOFINDIA\" } ] }, \"system\": \"http://irdai.gov.in/insurers\", \"value\": \"GICOFINDIA\" } ], \"name\": \"Demo Payor\" } }, { \"fullUrl\": \"Patient/RVH1003\", \"resource\": { \"resourceType\": \"Patient\", \"id\": \"RVH1003\", \"meta\": { \"profile\": [\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Patient\"] }, \"identifier\": [ { \"type\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\", \"code\": \"SN\", \"display\": \"Subscriber Number\" } ] }, \"system\": \"http://gicofIndia.com/beneficiaries\", \"value\": \"BEN-101\" } ], \"name\": [ { \"text\": \"Abhishek\" } ], \"telecom\": [ { \"system\": \"phone\", \"value\": \"9620499129\" } ], \"gender\": \"male\", \"birthDate\": \"1960-09-26\", \"address\": [ { \"text\": \"#39 Kalena Agrahara, Kamanahalli, Bengaluru - 560056\", \"city\": \"Bengaluru\", \"state\": \"Karnataka\", \"postalCode\": \"560056\", \"country\": \"India\" } ] } }, { \"fullUrl\": \"Coverage/COVERAGE1\", \"resource\": { \"resourceType\": \"Coverage\", \"id\": \"COVERAGE1\", \"meta\": { \"profile\": [\"https://ig.hcxprotocol.io/v0.7.1/StructureDefinition-Coverage.html\"] }, \"identifier\": [ { \"system\": \"https://www.gicofIndia.in/policies\", \"value\": \"policy-RVH1003\" } ], \"status\": \"active\", \"subscriber\": { \"reference\": \"Patient/RVH1003\" }, \"subscriberId\": \"ABCD1234\", \"beneficiary\": { \"reference\": \"Patient/RVH1003\" }, \"relationship\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/subscriber-relationship\", \"code\": \"self\" } ] }, \"payor\": [ { \"reference\": \"Organization/GICOFINDIA\" } ] } }, { \"fullUrl\": \"Practitioner/PractitionerViswasKar\", \"resource\": { \"resourceType\": \"Practitioner\", \"id\": \"PractitionerViswasKar\", \"meta\": { \"profile\": [\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Practitioner\"] }, \"identifier\": [ { \"type\": { \"coding\": [ { \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\", \"code\": \"MD\", \"display\": \"Medical License number\" } ] }, \"system\": \"http://abdm.gov.in/facilities\", \"value\": \"DOC-123/456\" } ], \"name\": [ { \"text\": \"Dr Viswas kar\" } ] } } ] }', 'Approved', '{\"medical\": {\"status\": \"Approved\", \"remarks\": \"\"}, \"financial\": {\"status\": \"Approved\"}}', '1705661714568', '1705661715600', 'response.complete', 'c3e73251-dffb-446e-a028-e0748bd1abdd', '9620499129', 'Approved', 'e-ce224fd0b737', '1234', '1234', 'Approved', 'ABSP', '[ { \"documentType\" : \" \", \"urls\" : [\"http://123.com\", \"http://123.com\"  ] } ]', '987664543', 'ABCD1234', 'Abhishek', 'medical')");
      String requestBody = getRequestBodyClaims();
      MvcResult mvcResult = mockMvc.perform(post("/"+ api_version + "/claim/submit").content(requestBody).contentType(MediaType.APPLICATION_JSON)).andReturn();
      MockHttpServletResponse response = mvcResult.getResponse();
      System.out.println(response.getContentAsString());
      int status = response.getStatus();
      assertEquals(202, status);
  }

  @Test
  public void check_claim_on_submit_success_scenario() throws Exception {
      postgresService.execute("DROP TABLE IF EXISTS mock_participant");
      postgresService.execute("CREATE TABLE mock_participant (\n" +
              "    parent_participant_code character varying,\n" +
              "    child_participant_code character varying PRIMARY KEY,\n" +
              "    primary_email character varying,\n" +
              "    password character varying,\n" +
              "    private_key character varying\n" +
              ");");
      postgresService.execute("INSERT INTO mock_participant(parent_participant_code,child_participant_code,primary_email,password,private_key)"+"VALUES ('hosp_hcx_955522@swasth-hcx-dev ','payr_hcxmoc_903588@swasth-hcx-dev','lagertha+mock_payor@yopmail.com','Opensaber@123','-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDAQLG7dTHuSE1F 8L46wS84SCU4Pf+ofSB8/h8tlyUHCw2SmY3CRZ3Uz1Jtw87UCdEvaSqs4YvkdKIh 1Nt04xpunUufUYNx6wBx/S/nuG7zcUu+bQeO1SpeEAA6+4HvnAyVBc+YCctnyREr Pgigs8MJG6dMA2rEap1na8VTrVN6JNNhcJxqnCyMoZ/aJIrmRxMj0Eh55LC20AZh jkxt5q/12qarpc/0ItQ2nv11fucojVVQyQGBaeqULVM9fGXbtquLXnRLJWzTLuSN Zk3Z+NpZZ5W7gxyBsxGTc7ccWp5edOxMXK3wELxsqirT0EOIz2ZMEYVbWrCyxfGC WYGUGRkPAgMBAAECggEACRAjsMweDfcfmW/3b8qioLsZ8hROJJG9gdby/lG1P6dA PQx7F9DzV1BsuNr1uZ4628rP5bV+REdRS1n+/HwmR1en9HtBwJGNBFKkuv5BUL2j DfeS1yNqa2PCtwUbQ4HuP+o1tpujmKFsa0bx3i2LQLcqhFVW56qFABafB0pQ+J2F 5MIgoS3e84Q/4oHYhxcRCgINQRoWKkqLGdAMg83NGe/G97PHGW9PPG9AQnfVhqey adov6rO/VOhbEYoKIwBq4G2qFnq6GwxDsx+wKl7SMVIwJzk8lRd5IaCGNscGEirU f/1PKxRT5WR735wyFyqLtSATFlrvH+sIiKsYR0PRlQKBgQDewV/umGidbm4jcmYR PFW53Ipr05lz4VNUOxdI/NIQ5jNfwjTE7Ep4R2xWycgzFwtoYYzWOhgHfSEcQ7KH 4z7w5Oe5CO+NB9viTxsrRx/kc6KU5cr3iqYCQzu2IaaVL2n6a0dDWR1ZXSGckKCf RWENuPkU9BAMn5LqEbcxVkSp6wKBgQDc8e4tMef6jpX5i8UEtd3y0HE302I1opfM 7Sdl5KVYsTOcTVobYM3niRKGtaY26EP7JCI2D0rCGS/DpDmsf7v5uHD4pZ4whRGR uhj64NIzveG3goki/ZerFZTc83mBxcaSBg48XL2x4oy32d0YXRC5IqEZ5vAIo7JE PlOZgKZAbQKBgQCVlVN/XHc76NErGoIx5stGYTPOzqxIZbJYaMntKGFEGeG71yUq a+ZiOMwmx5+Zt0rg0EkL/rzuInfejBNSLyawC3cUCU0b7oAYy7hZ6owfFAvEYz9V 1ZQ/BrkNSDGeEtXe5LVZI3mS7fhJM9G4wpU26tTQ3kf8whec+UKEbgLz+wKBgH1H EG2/5nFDd/ZPMh9Bn9+WIRwuV3liAADKV5SG2No5X7I4iecMNLQcHM0VInHvsNwt 2NgeQ51a+qJL9AfDRaqK0kOqZM/OI/AlPRTDdWyxNdL/yRJ2CBGR4x6FT1gt9DHI DTpcu5KpinCUr7Co1FqlMAOn1mKPrvzS+kQHljzhAoGBAL2Ui1c/qrX9ezggR78D WTK8u4QkvSdOoSDVbOes1FYEExHWh8hvRfO4PLTzlK58MJJnWj9hgiMItWzI7Iic pOEsHqgNl19VjdtKEloRAe5HYuC0pTTNTXo7qhq/De1wPr/lM82jofNXzpSpDetU 43Q9DXQ5KNiBbsKedfkRhJdY\n-----END PRIVATE KEY-----')");
      String requestBody = getRequestBodyClaims();
      MvcResult mvcResult = mockMvc.perform(post("/"+ api_version + "/claim/on_submit").content(requestBody).contentType(MediaType.APPLICATION_JSON)).andReturn();
      MockHttpServletResponse response = mvcResult.getResponse();
      int status = response.getStatus();
      assertEquals(202, status);
  }

}