package org.swasth.hcx.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;

import io.zonky.test.db.postgres.embedded.EmbeddedPostgres;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.core.env.Environment;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.multipart.MultipartFile;
import org.swasth.hcx.exception.ClientException;
import org.swasth.hcx.service.*;
import org.swasth.hcx.utils.JSONUtils;
import org.swasth.hcx.controllers.v1.*;
import org.swasth.hcx.helpers.EventGenerator;
import org.swasth.hcx.utils.OnActionCall;

import java.io.IOException;
import java.util.*;



@WebMvcTest({BeneficiaryController.class, ClaimsController.class, CommunicationController.class, CoverageEligibilityController.class, DocumentController.class, NotificationController.class, OPDAppController.class, PayerController.class, PreAuthController.class, BeneficiaryService.class,GenerateOutgoingRequest.class, HcxIntegratorService.class, NotificationService.class, PayerService.class, PostgresService.class, SMSService.class, OnActionCall.class})
@ExtendWith(MockitoExtension.class)
@ActiveProfiles("test")
public class BaseSpec {

    @Autowired
    protected WebApplicationContext wac;

    protected MockMvc mockMvc;

    @Autowired
    private OnActionCall onActionCall;

    @MockBean
    protected EventGenerator mockEventGenerator;

    @Mock
    protected Environment mockEnv;

    @Autowired
    protected NotificationService notificationService;

   @Autowired
   protected BeneficiaryService beneficiaryService;
   @MockBean
   protected PostgresService postgresService;

   @Autowired
   protected HcxIntegratorService hcxIntegratorService;

   @MockBean
   protected CloudStorageClient cloudStorageClient;

   @Autowired
   protected GenerateOutgoingRequest outgoingRequest;

   @Autowired
   protected SMSService smsService;

   @Autowired
   protected PayerService payerService;

    private static EmbeddedPostgres embeddedPostgres;
    @BeforeEach
    public void setup() throws IOException, ClientException {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
        embeddedPostgres = EmbeddedPostgres.builder().setPort(5432).start();
        String jdbcUrl = embeddedPostgres.getJdbcUrl("postgres", "postgres");
        postgresService = new PostgresService(jdbcUrl, "postgres", "postgres");
    }

    protected String getCommunicationRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6ImJzcF9ic3Byb2xfODQ2NzMwQHN3YXN0aC1oY3gtZGV2IiwieC1oY3gtdGltZXN0YW1wIjoiMjAyNC0wMS0yNFQwNzoxOTo1NCswMDAwIiwieC1oY3gtc2VuZGVyX2NvZGUiOiJwYXlyX2hjeG1vY185MDM1ODhAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6ImRkYzQ5YjE0LWViYzAtNDY4Ni1hMjk3LTIzOWJlZDgyMzg5ZiIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6IjdhNTQ5NzAyLWRkYjItNGU3Mi1hYzIxLTQzOGQxZmUzYzQzOSIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiMDQ1YTYwZDEtZDczYS00ZGE5LTkzZmQtNzk3NzRjNzRmNDZiIn0.gVvap-Bq5lKqsq28LEikeoSX6l4QZuKXGLke_xH5gW7RCViNFqkuoqlF951Yv-9xslx901QsAvZHOZ9h7fJoUmYe03-7_CGP_IN79dygujmnkbyNGb7Pt2ytpPbXyJbeUmU5VKugbs-Ux1UZ5xCb0f8A4blB2gFG8cGSjx_cGfYEndGVNRMiPH4loLnPn7QQ5GULJk2zRY9ITdOJv_s_RKOfdqINtoJq0SPB9A2jEPqBYvAcc4UeNkaFKV-vTDs4Dsi3ynrQIwIoqGZUPsEL_RU7jKTf5NTA5tk01bSSrBBIkMBFq3QcpiypEZPl8azJAodtyeb1gJrydxTHnim3oQ.x7ZRbCg-ByChU5lq.dgfEIAmcD_W3nbCshly5txshHyL9ckpH--YQI-ovJ-8yTWDDAWvLRmfkSi5jMHktWPk7RIMUFslVwYMy2PsBreNEJeo49ACbrsxXP8I8yarMlDGx1c9tYGruEiqh9-QwKMLgLXr8z0fuTopQlkXKoCvmdE4N7ALxL_ixzw8lCSUBzbUER9biYAfuKcr4ZNNfc0KJMiTOXBu0VDwz2ndK0XO7SSAGu4VLFm_l1dsvKiCauPkER4h72wPrgJ8qf8z8v6WSH9ryajIQ_TQq1cmLsi7RLx7wpqpmdO8OFm_0PkIIcEk1tBPVuXBntl6fKNttAyeRwp4NeJo85s14YjmysyuuI0O24-OR-cpYacUrDVY5dE14JMTU1-lq_9hUPHtxRvXfhR5WdBnsCeyQg2DL78gw4sD8TsQhe-UNhTrxIgXg6GCcUxJiYRW_MTuNwJ4LXt7FQwhUF7ZAmyNlZ_hmzTiyjVqJ8vfR-MZGVQMRLIeZQAcnpiXfd-zkx0omCW3EfHV8a2H6D6Ig56YVK-CLW81T9fJWS9_M45R7TFythsUeRoai4hRVbWp4WUinOLdBKPJddoDCL5x_YbRTXj7pl39ltQeSt64myLNyq-ZQ3XJrH3YV_nSAbNW_wB8.mss8qUyRt_PBpQQHFji4Rg");
        return JSONUtils.serialize(obj);
    }

    protected String getCommunicationOnRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6ImJzcF9kZW1vYXNfMzUyODUzQHN3YXN0aC1oY3gtZGV2IiwieC1oY3gtdGltZXN0YW1wIjoiMjAyNC0wMS0yNVQxMjowMzoxMiswMDAwIiwieC1oY3gtc2VuZGVyX2NvZGUiOiJwYXlyX2hjeG1vY185MDM1ODhAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjQwMDY5ZGJjLWQyY2ItNDMxNS1hMDg1LTcwYWIxNWNiNzQ2ZSIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6ImVmMWViNGJjLTlkNjUtNGVlNi1hMGJjLWQ4NTkzY2M0YjdmZCIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiYmJkNmI4ZGQtMTFmMC00NGMxLWFkNWItYjNkNGM0NDYzNzVmIn0.b1fWCeoxFAzq1Mx2yZC07U_bEJUDY3rbravR2FVPAhckYgw9RMwArwp1ZjH0GtpDzS8Sg1Gkfy5saj75mo_7AZF6byT_1LeKS69AL989SIVn4Gm-FfXAIS3BYjuCdTuMzsqFCBn6JqFGrA20EciyrgH5yVeAsrX2OEd_X4gUTPWyLQLv-xPjGdtaW1nnY2Q8kt3RJumOBB28oyiJB3szTg3crKdLCFa93SzOU0xhMXoJh8fz8r-ZF_3AWPx2eh5aCr7nqOTMrvE955ld_-yAFmw2RvPckEfBh3NAcp1P5zZjJWm8sgrsYZH2YcxKFHqhW1uB8qibzdrtSmr3ShHcug.w5MwsvtKJleTrcLm.G7U1WdSEFu1bt5F-KIBKWyMldlOcbJgb2NAM2kWwumKXqhTVsJjhJeT-Ss5YbSwgprp281BmMVElf3-Eg0nOQxbnhhdcjJhw33Ll5jD5G1u7R4DrwCxH4wxr-5Sla681n8Y5EwoLs7WIsOUY8ilnTY_i5EJebiZD4-oqURdGG7ZJAeRLGR2uEiR2P73DewU44riMggh9npkILM0ufYhkJpN44zO9MHI6Di2USIZW0qmkxpKLMmyh_b5rfPb09LWbax2MSUJmxSr2wIQYDvOqRV4ybX1Ui7ngb_B9RXGFtFyJphjg_E_ltf0pc85UMlD2uUocurZsNSm6dSTaYhAxUwMJ2Am1_ELClzWDqHRu4LJ7meeE3IK6k_ZaDKSZgnWhukW92h_qSsSQGkybD0mtBLc0XYc7Cp-7qdsu-VJn4Cw8NSzDV3PpdcGF26RH5jlNqm1827G3_ttgMNH3J6Buu0FXUYE-iqjPqMpxnt-TCxJaCKfhmibmM-GgayEOt_qN6ndBWTN1Y6J9xMUquMPBgS4alul6UISSQcwVl2QXKu_CceqZJuId2PpCmrWDX1O2CdSubGTblnZ87EdqAhmfdXbXZp1NGJJw2N1Y9s_Utzw7pytAWZLS4iGWbXM.QYZmrkqP3FY9Zy2nA6bQhA");
        return JSONUtils.serialize(obj);
    }

    protected String getCommunicationExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6ImJzcF9ic3Byb2xfODQ2NzMwQHN3YXN0aC1oY3gtZGV2IiwieC1oY3gtdGltZXN0YW1wIjoiMjAyNC0wMS0yNFQwNzoxOTo1NCswMDAwIiwieC1oY3gtc2VuZGVyX2NvZGUiOiJwYXlyX2hjeG1vY185MDM1ODhAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6ImRkYzQ5YjE0LWViYzAtNDY4Ni1hMjk3LTIzOWJlZDgyMzg5ZiIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6IjdhNTQ5NzAyLWRkYjItNGU3Mi1hYzIxLTQzOGQxZmUzYzQzOSIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiMDQ1YTYwZDEtZDczYS00ZGE5LTkzZmQtNzk3NzRjNzRmNDZiIn0.gVvap-Bq5lKqsq28LEikeoSX6l4QZuKXGLke_xH5gW7RCViNFqkuoqlF951Yv-9xslx901QsAvZHOZ9h7fJoUmYe03-7_CGP_IN79dygujmnkbyNGb7Pt2ytpPbXyJbeUmU5VKugbs-Ux1UZ5xCb0f8A4blB2gFG8cGSjx_cGfYEndGVNRMiPH4loLnPn7QQ5GULJk2zRY9ITdOJv_s_RKOfdqINtoJq0SPB9A2jEPqBYvAcc4UeNkaFKV-vTDs4Dsi3ynrQIwIoqGZUPsEL_RU7jKTf5NTA5tk01bSSrBBIkMBFq3QcpiypEZPl8azJAodtyeb1gJrydxTHnim3oQ.x7ZRbCg-ByChU5lq.dgfEIAmcD_W3nbCshly5txshHyL9ckpH--YQI-ovJ-8yTWDDAWvLRmfkSi5jMHktWPk7RIMUFslVwYMy2PsBreNEJeo49ACbrsxXP8I8yarMlDGx1c9tYGruEiqh9-QwKMLgLXr8z0fuTopQlkXKoCvmdE4N7ALxL_ixzw8lCSUBzbUER9biYAfuKcr4ZNNfc0KJMiTOXBu0VDwz2ndK0XO7SSAGu4VLFm_l1dsvKiCauPkER4h72wPrgJ8qf8z8v6WSH9ryajIQ_TQq1cmLsi7RLx7wpqpmdO8OFm_0PkIIcEk1tBPVuXBntl6fKNttAyeRwp4NeJo85s14YjmysyuuI0O24-OR-cpYacUrDVY5dE14JMTU1-lq_9hUPHtxRvXfhR5WdBnsCeyQg2DL78gw4sD8TsQhe-UNhTrxIgXg6GCcUxJiYRW_MTuNwJ4LXt7FQwhUF7ZAmyNlZ_hmzTiyjVqJ8vfR-MZGVQMRLIeZQAcnpiXfd-zkx0omCW3EfHV8a2H6D6Ig56YVK-CLW81T9fJWS9_M45R7TFythsUeRoai4hRVbWp4WUinOLdBKPJddoDCL5x_YbRTXj7pl39ltQeSt64myLNyq-ZQ3XJrH3YV_nSAbNW_wB8.mss8qUyRt_PBpQQHFji4Rg");
        return JSONUtils.serialize(obj);
    }

    protected String getCoverageEligibilityRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6InBheXJfaGN4bW9jXzkwMzU4OEBzd2FzdGgtaGN4LWRldiIsIngtaGN4LXRpbWVzdGFtcCI6IjIwMjQtMDEtMTlUMTA6NTU6MTMrMDAwMCIsIngtaGN4LXNlbmRlcl9jb2RlIjoiYnNwX2JzcHJvbF84NDY3MzBAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6ImMzZTczMjUxLWRmZmItNDQ2ZS1hMDI4LWUwNzQ4YmQxYWJkZCIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6ImQyYzE4OTNiLWZmOTEtNDFlMi04NTBlLWNlMjI0ZmQwYjczNyIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiYTE2Y2Q3MWMtMTU5Yi00ZTYyLWEyZTMtNjY4NDM0MWIzNTcwIn0.a1amnVdbjHNZDiBPt1b3reB9WJ6xr6WHoQ3DG3FI9ucyss1cck_VTd0DnLYBQJDMprGJ5f92qAjbHEvvtR_4piYKR2rz23uECW08bfh0AM1Leg8jc1LfzWohcBYcdGOCu5Cfb8rjQ12QAufSjqYXuPKnVDY5WMAyM8_yUKxujMzQYKLXj-i9xZSP5hsrqw_-7_ouvSJzy13JXMq7lBuCxelTjqrgVmTc-WMHVDeg8AwMYy7n82HxKfpvuUtBE7jVGzJJZ0ZZ-p1NFAfQhJ6N3EQda25sXEGccFqiny3yyvZLSuPRKLNLwhUHKvoWbv9KF7jHY7isVXonrdqHsT_zeA.zOZmNu7OXmVLu_uq.05H1jG2FKY2v5skXNVgZpw4yrnGTx92Y0yfiOELnWR0pqjSkT2i3CZwc6AFTqtDSuuhQOyUaPUeeZf078XGWl67yyxG-TxV32eh_wNMobNsdmmsHvC4R9ZBWFtRGD9T6RZmiQ1GqBmL5EHzkjUMJzNOFe8369-XMGRait9BFYA0xE9wCly72T8QnwCzI3ACrg8nRJS7GD3C7IDeBkSoEKFDr-F7t0CD_ITCWAJVMvPndAjpB9S19uJzEPiOWukfGB_ixkQZWj8ELcJ9B0jeYEbozaUDGhTrITqTC7n7Ng2LvDdvyViKcuzO0f0SjQ6p7-kAnBJTrNJ12_rPSqf-DczTXTLt_o8L4vJ4q6iH0MFCMqGxGNMRkx-qwbXdg38MQkolqNEijvwtKx0quMwfyRnyNYXBVS98S4r0GUWpJE0U6bZialaxFXbImzxjAKQbjuVnpyWt5EcwEZ1rolJa5AMNcKtr3Cdsr7wMrd6ePhXUL9WfcYoiEJYS24fFT4XNoftNNBc6nK1pdEXRrBTiO0ZN4CgywO0TWWttKDw9-FiTocNEXlTfQFdLmNpCnMa4uL0XeCnPR2NZ-I03BWBKuA1RqFcDL4brg0fjH3raXSgQNtKRR9_14Yd7QK5-l0Gpe-6UsIVwL3w15UmWYCtss9jang4fLe6a36xHbfxXrRdxkNLLuHVL0tl-lZEYmr-wigiSZePpvugtOO0Iw93zosAsrTQVOrHFR9qdqeEq7XnunbAkf59BNmMgmBvC_qrNArsS7EJ1PV58vtRVtd95fH7yZzpfR4FEoN7O17QyMxoQxS0P-TIaWlAnPsnqDHU9vFZlRtpOrE2Z1wVcDW6fQreVFhSP193SBlyqCG25KeRd6CgMYtL-y12RB2NOuwF6htClW3QRaMoRP663gZHO31cbjQNq3R1be43wGXH-EPX6vCayPdRAOLV60dOh0tA_oOBnsjvm862k33tEWEKZUhW_4HWFw3LZUZa-_yyQ4w_FqBCCpyDfva-erwB--VaCIf240QgCBXZY_dQ9cIeISsoIxWhWr-7EtG7FMlPpPAaH-dKtF9lpgYVWvQ08P3DWRka3ga85WC-DOnNRyXRXsOmxic85wMOj6V1SgUhf-7YFpD2nUw3frw2RvSgeAdhoeJonAVle-56JuJtO7U9HcvNIYjzFHE9E_W3BlCxDMaKJ5NKnMyzqn5gwLmpQFfwl29D8747jM-ZMsXJ8ZdiTu5nsEJHydQIOeN0AEf3mlvjuSs1Q4CkflQ-35YiReoKZM6TJJKCEaEvRFm3adNk7yHlWTM4vRyGbqV-PnRW41SMFR7i5FNq18gR1uV4nd0KSRYE0pdbVRerPRwkC_5m-0D_cCBGu-orQ6jVXM-sLQsLD4LegCXRt3rqURSKED6vWWwp8wRMTvz_BXfEBcGjgCO_YGWT49hbWKg60Efo7yvnucOC3FmOS2FXk8gKyfQ9j_DCRuEhxYvbk9InbCrluXDqUm7dz9D-fNHYjbVavGyG9cRxUpFsheNXqyau5wVhlPPYZENEzxicoimLshpZ81styHdMFjc1Zz4HYKF-fth2NU70ECTPSaPTa2HkYk4SoKoAIOtCJbWNIgARyLFxgDre6Y1nw2tgp0O2Shiaolf4hOYUjwACS8fsrMukcbnVzuB7kLHmw_RAmd_4hQiJ-lwF8-UcaOvRxCszJErWBG4cgyYrj3jEWTXh9VmbGfP_B7sS6mEHkv0QW8X7PiIIZrgVqHrBbOSwoLSL2t-1kPQ0DJGeaTn3NmPVvijlJH5-J23Dpe9SG_LtOqzsS5wEvxYESnRvAxw88fqOC2adwGTd0nI8bRCvfQrEzN9DxUMCrXAqbJhIvjwh43muKs18ygIJ_JL_bjTfHSmoianyG0VMG1L7HC0TPdXgLEsffwq8GYqRlTh__ADpZ8GtT_Y6QTwmeNYy711JyVoPkh_V81DEWSpEUeAIfp_nps96_PK22NlRN4RbsWrqjpBezMv2yQL9Jv-XwevnGAheS5qubN5zMFYkq6u6oVBLWVBXb_YnUPmVWOV4sfVd3joS6qd1zXzwqVmEnFUro_f22xCfD1a_S_8wpVtZP88GqLF6S_sva7HEWAzO27vV6WJImzpCJrHdt_gPGDtCL_hPu14jcYM4OvWunU5izLFLckSJcJvGSWkJ58OOPK-kTSUtg3Cwt6OZrqhGCirsixM4m6DSuZzwV_xkzEsxa8vVPbNCEp0G1INd2nmiCtP2zY9Opc5o8_v94V7NYD4ayiVZMb4vfn67p_nxVltoRscJXPQTCQhAbJN37j-l8vPRbHeFC_PEZpbD7VRNCc_ureanMcnQ2FiIEKTdqpJCoFZ1jgZ5L8Z1VsNIYj1MkLOHGrebbWcGBoE0Nz-QPndStYZL-66HTWOYTJPeP3_XzxsOiSkjWWRKrfs-j8GXCLMQVDbZLPnBhWA4o-aH9ds4FUNJbRxNFgbqT8hjE0btEi3cPUf3pSumaWjOMnR0Oqw7dydaDWoE5Zba2Ywn97l0a9UuirMgCqJ7h0CIIPqnMCQAPKjC0GZYLsq9rHg-gwnCNCGcfnJqVq8-hXgF5hr7k1AcwOO9naOviEgCQ23vt6duDztxa91pJf6mU8fr1SVQ4wOYnnfs-vhS-Dk4gHoVxppMb4S0xYd3yLuQ2970ii394uOMMRUfMf1_oG-d_ouXCRfJm0MDyMVlU5K-ICzmYPUG0z3FwSgTpRGKink0VxSI-8BD4onWNHPI2984CTtFzFtnmrB6dmyPGXH5YMakVJxepxXJfGIf4v6trr89-847pmAGEQys11EmKeED-V5_6UfMtGsK2tKpM0Zta88thcT1S2fdLs9yfsUxzCeM5x4h2b11QILpzdCBIUL5J_I2bL0djTl1KfFNlK8wX7haJTN8iVGc5qZwynCv4fTC7PeUcEuJul5lZglXxwmab-IEksahSqXj2PsPeDvzmCfBwneJaDigvbqwjGoPAX97hc4xxOCMdxmd-KlvVo2HufMCi_JXJ8tMGQCtGfypM6prUPBCqO2I7jUeCxIN2eqeoTKnxKwTY_hvM6rJPyaeJ2LtqP6qjlVhjmrzSOv6f3nlCACnoHdkKjrkhFkX-7Pzf5GsUwPUpZyKuRKwDNg2wV0KSwAQL8ee9NExtfQ-mCowK4nOQ5x0oS2RaiHDFEcSEXdsovxonQGqzELVGWM3M1uG6a1LokXGbbvrxy82A5dgywY27oaR1uOIrgaKruB9qK_gJ7QQPxzok1PGO-FSQUgXq_GJl9EYtle1BAfgNcJ5XijsgWS0Qjn_JqXpfMVw0pZkYDNIS_RpGkWsrlFjeGF0IG27FY7YcKQIiwX5qj4vziXkghN3GgrASDm4E7dp-PwBFHTgmo2yzTprcNzFeGK6UBRycCEBULhu5Gj1fJtcQyesf-palCnu4NPP5CVDLkwL55MvRUrlPwGVcjk0nGbvrLdYxNhoKE1pmJBWjEujSlLlIUdqcZgsGYsOcgyy-nBgr26tIzMtYDHknB9EMHp8jYIZOUqcNXdOOj90qqpnca4R2pgmpi1CXs5i0uGDHtchk6Xeqse96DwOrxViOgrTDUQ9uOi0jPKt2WF17OGY4GawhxnKjGbcSQ8cVbFG8wMo7HL2JbK4idmr0ExYLOW8340E5V0zMLfatqk7Iiak6v0pogrrxaXapaIg89yttOWDgPfnWvowsR6iJKxQKoT7tP1q6o496GHx6Txsid7J72A0DZu6WSuZgBSFTrSCPERfLyYEq-gdOY547oTFznh4UXobC4yy-sgymkDs1bi9CtBvqC_jBzJIgz4jYZ2X_bbuIl-33k6JH5LbXT0343FXrKogjKHacEaOc6LMUk-_Fo4_2rRwR97A4jkY-rMa-IHmikNDlBqyBXBl120uTpH9WPC9FWvAyq3dwhW-NTEK0IoaEz2WCqt0IzSBkahfEZ3BCFCNeguRvzwAGLY_pBPHWS47S6adL-3w5gIToIXhK2h_Q_pakY2jlPwyi0HS0nGjYkYixT7IjkMU4Y5w28KuSylEuZDeneYiIjVFlLdSe7aGc1zyTVnnA8FaD0xeAZM7MqM4A1pS0pSzMdUswT-xnIt0ghrI54ybGerknVxUGDTb9GUCnwoVyg5MDf04oYLLR9TBgmnub6Cbx5x7YCU_Ros_QbPuzSeijxxt-N3H4cC7stp4QLcI4NPwMWV71HidASKUzUYGWGPz5tFxdzG0_uJPHEG5_bIagjVMnzxhyIkCov7EfVcRVmvIX0iTPvT2fBGaUf_2y1BjWOaur1-jpOm3bc-sVbNSFu3n0MCEuQZtE3Ptk_78nA3cz3dlqOJEDB1R27T1UluYqJE0yFju8O7Wqcv72S7CYWV_jn3FPA9N1NYdImDCc7qCXjzkWIi2vbcc8jNtRi_AIUhq1xWFvXv69z__0OVL9UjlNj6LZwlg_rSnRQmYoEeeciJYOZPh5yqxB18WxUW4PW0XMNWPe5JejHBNc_2R8YdsXofYK5NuavRJ3RnB5RVpugMriMKgXx9QudtukNCRx_gypc6WRmEh39h1CivM1xVOa7BkE2Fq8yzUNgQI2CoqZjSnooHuiCROdSTQEqSYHxruQEzzyHuZYZ8AymCbFABNSSDJTngSP6NAzIeb390_jcQxG5JLuPbwSCqwQ9TntetL_c0SoLs_0ZHZdNgmorF56zXCbQtmkQeTA8JO66RmYQMgMqrrvgA-WF1p7nK9w--h8yRNaJ-BT_o2nFwuow6bB8u-nIn14oPbgKd0u-687NKpSa8UftPe5eJtUbcN3DP3MW6KmtOWq_eJ0aULh11gs2Lx1VAh1zYd6XHEr9GyXnyoHseuEIcOm8utcb0fMMMMeUAzsceL79vlLk1TkV-RgpGU7wiaTPubkG-lzr2MPOcGzWvDL-l-rrqxx-8P4HForypS6AJLV2s6p-eWJM9LSfrpgXF5bWP3hw07cdLQ76CDhbFsc5YtsCJ0iPUhWxMnEOjsBPX-VlyIzNUzWMsxbwBloYceK0VAAysx-fNnsOgFbCuMp7VS7-gOvy0RZR-kVxTT-A1bumH2_0AwVGGYvv8yp_s58qAM6QosItx8vPGaEFLZxqDT7Vj_u2XuDpByyooQYtsxzKTpFKxLFUFMavJ_dFPRlWtsU0VbyW8T-rsbQJc1Nr_-QpG4YOgyuI8ailchp61XxNuzNpZK7bV2j8j9_pUlwJDqoaponWhaJUDAZ-g-xfjCKfH6twHH605929H_kIo3cuhcA0R0iVVNGn_r_K13eZov62QSXMPRlhmb2qGvNAq38x2jDh-XIjc7-XWGMqWTeALHVnfMDGvr_Lns6Gxl0YmAY74F92s9AQnJabL5kDM5dBivTj7EwMAlxilux5x0ZCu0-bcxrz-CB6nJIBBXcJnSUDRP_xrt5e7iXF31bpVfgGpvSAFjavTzwlAEEhEl58IRnikE7m-D0FzQbKF5O5bJ57hbxhtrQJ5MSE-vmKkVmwCtSkAe6rE_dd6q8HWAAXYIZQrtTVBuuQ9M76WUP_mPaBSRIdl2mqpteajtfPMYklPmolwnGwU4f7oGT52g0IdYlr447NEIxKuMhd14wm2boQbgA9tM0VWIseMBeiceXbPB2673_mwIvZHdXzWqVk821Rsc91MVBfVi3CrgKQDK6Y9Ae_PJQIHAmkXS0xNzTO5ZNZFp54jytH4ZWKs422p8U6LgePJ9RXy86TQ5IkX1OL9gq3bd01e5NCzMq1jPmJuZDLvS0-TG48fp68dTgw5TM1ERpoum3j_yySa90JtZni02KxqAX7783zvkxAQVUdXqXN47dGvRULMIz35V9wwD5fnExcaqgSfqQD1aYVLzxWGLXP6f-Qt-4Umr8pZxQhiJoZTAFAdVLPQU7ug57QKDine-jx2Yprwjk64rNYRywUzDMn5IA1l8g5zDPKWTBYChXfU80gBg.Kj-yVqAEJbiN16PfJ9I25w");
        return JSONUtils.serialize(obj);
    }

    protected String getCoverageEligibilityOnCheckRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("payload" , "eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6ImJzcF9ic3Byb2xfODQ2NzMwQHN3YXN0aC1oY3gtZGV2IiwieC1oY3gtdGltZXN0YW1wIjoiMjAyNC0wMS0yNFQwNTozNToxMiswMDAwIiwieC1oY3gtc2VuZGVyX2NvZGUiOiJwYXlyX2hjeG1vY185MDM1ODhAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjBjYzllOTA0LTI4NGYtNDllZS04NGNmLTVjZTg1YzhiMmNjOSIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6IjJhYjNkMDBkLTc3NjItNGZkYi1iYzk0LTM0ZTI5MzNhOWQyNiIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiNzAyYTUyNzItZDIzMC00MmVmLWEwNTMtYmU3ZDQzMDdjODQxIiwieC1oY3gtc3RhdHVzIjoicmVzcG9uc2UuY29tcGxldGUifQ.Y3Er4ziu4PEQ2DmRHqsFvy59XEB0Jn1MUJdMZYypfBQUDPbVkK9LPB7CeG4tnHn4Brwi4jjsh2RhoLKlfz9ENPV6IgP6lgw1EGWxE8ITrYaj8t75MSznqNpMWtwYOTAnvipChlaQ-zjFP0U21sfr1cKExxFxYtdvtoN8F0otRKXr98h0qz1C8Fub3zxjvKpEbRUdg71VMZigVw9PS82bD7zFTUyuxEpK35GLiyJPieNm61-NkNUgsTtOQO9ya-apa_p-_gmufNf73Tiu5TR4CoAw-WEacJbJAeWR9DECw1QzgSq79lZw48H06I4ffX7Xjw_OhlYvDjkLfAP-xsnmTA.cxbvSHtefO8IhV7G.NPuoILit0aE6rRQwVNbB03-gLKwOsfIQTbJzPmxojmR7rny0TK0weSl3QS5yNpMMoLxZxX9q0xL8YIdGEUfZu0lwIQvTJoelhrIhemFnu4i4L41SxLNsAMH-XTktQQOc4h2FDOewhxOiobIbX1XahRamjENxO0-QSnFQ2UZ_o0X2CCqGvz4hnkb6mMX3Ehz9S2cQwHL8Pxzqw_7-HcplHRnfLPudwkbZodBIGz6Blmlg9bzB5gNyE5imKHwWR4SZTBmDJrrQnVHRyNHvUR6g6k8VTpIi7vig-bF83GfFk43nz8aEYzpnBAVNfcmRQF2OIoiPG3-FCtc56D2T_3VmKUOioJGjv-bHNJ1fd75fdJO1DZrevoAOkQfP0OVKuKdvNgCG4FmC6SIkCgLTtteuF7kkbs_HwxPwv9-_uOT4I9KFAm56Dtm78dS7M6f97PiOtjBzZEjg5wBo0qWHxG7kGNnh-Qw3UFiQNAFKHoRA3bTffedU5iTpIantPYfJ5192zuQA2o_3zCzfbOqA1phHch8Mprsa15gYYitizWbrhW09z9kSbdOvVXEr5yoB6eZjQvjZC6sC6PMgglyMrg36FDU0BPUxYHJt11XRUcyjAQVba06idGcPChOJ30FhMwd9YMA0-YvprpbtJ_YMfkMmdV4qXejLKPOnFzvpMoWhs6tGVpM0dipDmW4ZUwra2em9Yyg__4VgQ9DhOxiB86yPHBjmNIbb6CCAcOm9l6OqhEeXGmVXg8nvuyPGtsldgtGWxau5K_zTygx5xKUO4f3B6QQaWp_1MkwhyfeNbvMLQ13mhNfNxzZP_P8YGolZ82gtQ4LLzUP0fukaehr5GHl9zY8lFGl8KUUy-YFNzBgQ2nQDzf4ixgKi7-Hi_7YaalpvfLp_JL7kwM0krJ9hWbZM4ReOHFEqHHwlTTjEwUlagDm1I5wnU7kNrXrk_L9ebKOE-wAtZVuUAxup4e-MA1CftNwFux3ByfD2I0VO1pfIiwE0DMdH3jvNw0yMNM_5SOFXUEl5yqLFo2qz7_Pe51H3WMdltY1nbU2NLEmm6Z54aZWQj5MH-yXYoiEKD5m_4LxKVxvb5dPZlEEqnqoZ8I9rONIWrsKRdw4Cx8Fjs9Kia6kxoCRpI6QL89kW1RN5ESSrx-Ub4gTmHrtSRgY3PzgAyvwgEw8nc3KkYUbY1_fjH-BEHCD18CppF7dttZ9svyEGAZ_1SNQSVhzl70MFZzSGTn4VoumgIYUDVr5EG8rZ1KZtde-GOluozdcKcm6EKYwerY7dAHeTkNm7-woUJ39BZE47ptJbxNUnZcSZE10tmVaSlY9-weKo79xRbM2MI1SPCqPHTwpOBeG_YMTHjzZiIlvwp0qv66PTv4B8dyNHWz0HDlkXypN7Cv85TzGg6OBK5rkQ1veCibd1vsZWV1-VQiR5dA3eX2aywu5dgWg8SHnmz20y1Ym2DEvXqYP0mv3xw0Xx4Dbzp1x20R3Lr1_JCP2aVP55nN6eTGQRPqD5oCcptQs5h1OHQ9BaOKnv7ryIfj2QOkWV335uUimkA109jX7qMwxf4yla99T9PDr2vViQYa_xUxznM4EhSlysNbYeDwSeD_i0eqiHitzTkUagcvSdSZ_oC178MwKuUQG_YlyUSgmfYyLjpAEXcHilW4P-YYtlctXKZIUm-5ZtJv0k0WQ3wYWN8ku9IwsqbmUIFU_oNQWAnF1mgfHmm7LNQeS0BQcYg1QlwFaC-mGGFfivib8gH7ttggjULz6_BhB9byCEOEPI6VP14aAQpbvP5hSyqP4J-ETvI8fXjR7JKwhzQeMF9F_eexSeE492O6P7LRqXh23Uc3d4VIL5W8L5aIyNfb8VkVOqGNftgc7R97RnVqdj0OdOZidrqaQDRQyV9UH4qtkey51fyXCsdp59tL0wkXDgHySMxUkwLe5rAc08SnLBUHZ_TSB9NSHpAFo7D2IVngmoEKSFeUZOXw83B8MaSrYQD6yMfUCHBqioJaoUyqrWRkg5OsAaeVJKy2_8ZJJVye8M7buYwzOV25TGTe-dRlR9dYmBCNZB-XAZyiXxcWUcGXWQmNicRE5QzhPMce1j-j_0Z-JrTFivMi3JyFvmi4i0TEY-4N7siTZ1uI04n1Va3RKoTAcwzhEpSu2qnTBBldUeWEfFv6YCGv5IW5G9YrwS2VuuonIbhRbcqoPYXtQ0H05eT5uhaGnrxEo-A4Kyvw7W5H4dcXAgr1UEhQByqNENHHDcfh3-D2ND_goUYhASA8xpHur8XmBMAkvofHXalg-aiZByp3VoE3fLWEdqFMigNjQnOVOJIjXxxEwF4wmw_jeG6kH9AX5bvQrpm19Gs7Z6nQylRH3Y80YDOUSHcYnasRo45EWAsVcZZAGA9iWSM-WKaaun_UfHP7Wz8GM5id_EXKQ6KnXOmMpyU5jpbYqZpO6didYDcboRi797tQup79IZXSQrqviiLWkGi7KcgprB21PUncjyqI7m7sVXQ37ljkDcRSC-43NBtwBdEXNYQXDMkKnBKtBA2Y4Q3Ao10SukDIgwOm8t4OB5pqFembPkm5oLKs8gpZVewR3bknDfiu5_nfEDww-OXOLgpfPf4x3s3ppkWSCtmm_1OaseWkhy7xdrb4nT1DYYr7xrdW06pDrrQQW12aCoklXR0NCIo-8l-zJwwWDDixJkEOX-Jo5HMBejqBXdr84LmfQ6WjiX136QOMmQ0bWczd8FS7iHsa_pt7o0XM3YygXA0p6uNa4k6_oa4x6oI9nTs0lhcWO3Z7MDIaLYgvNBtFx7QPcs-RYxHxa8uv0vhGGKTp1HE4yE8p68ax7y7dDkLDyMekuEuEiMtSUIu7dIh8oU9AzcGzNqVcLmjJ0hqPwLw138w1yQuv9ymWYrnN5xyo5RP6hy4NMuYx_H2EgJQ3vKbYO2cub5iaNP6xIJnuinYemaxnnGmFwfwAjuiu-Et5SsQtnkL_3hQG7HKYOifgTxj3bkJqA7SZ6Js6f0ZBF1D2bUeqpoGlCABdrOxgZnD1CJCOx6gLMozbChORLmgIoc3c57YgF8ISJWlW67F0d48i-rdPxUnZpQCnZT3KEkQ5DUVOInplzpJwVs1dRizN3xb5TDmQV6fDSLEQu5w8RbLIlz0OlDvf662sH1HXSVV0NERrCb_PYfuRhoQ1_S4H8nA2Twgmfo5LuDI0VOcyg8L8ckZ-ndiRpOcal6j-1vmzUpstudnAVziPJXHK4O1o1avWNWxhepX90AMYshh5X1VCfaE3c0FaHz87HjVlMuBV1bPQi0WdrYFOP6_Ma9OXKd3fpyCqkERhS66lpyViZc1X32q01MHb5VU-Jtoh8lhzDMLfq74RpdAfvSxDYZ3mM_CNLxjVIduDiBMng-prPS77pLjEEPbYJwXGqHcD3qkRttBjRYcI9vLzf-41iBHUiwnIbYWrfISs-iuftEXc-4KneNh8aOB9uEderkRhRp7tNhnLDMM_UlQidcBAE0CjqmxfXLTK23TzeDIEkJgBgG-Pq_cG_eL86UAe1PkQsJFPfvcJKiEssG3uaNnvI73YMPSAwLmPPkQrNmKPsFP9YxCXRkPYLh9YyAIpBQO_PTnZKXgm9BBf6vBJY2Cn07TuVsanZxGhMy-RieQ5gb3ihMjTmV1J9rEbiLuRRapR059JGOvzRjFeStgpBbRsdv0Y8IkWhWmYOsEho0O7b1dgEWt63ace3bshlV1MUFmfbDsUVhD-FQAEHgo5kYfZCadF21w5lNPNXIVP4Rn-Nu-STmYigvdbBhqGUntZRtRveIyAHiERT5S2j6FgUtUzdMZ1BMTBGAAf4ssVRmt_oDtSDxOFoFqjf0wo_ZfmKcwGtY1xbjoWa3LOJv1xJ5BVCjEanZ61bO--etuen-9HFUOWlOyiG-EvBFPAdeLdPkiskTUwwVsLDYqgjl2RO-qn5JRoB04PYy6E6UJcBIiTYElMtCQExY4ny-t5YAeC3P54FBeLcxwHjIRiuTyPNbvyCnbfhizeFn-ldsUHB2Mfs-XKnYICUwz9rDTMjJnUp_XnnG6LMCdSjhAqp2Mkr4d5ke4zeUAKM5QO02FFmVTdWx0M-Z5deRJJePmzMwx32gJYHKNoll5KFB-G_4zAMGHSgrY0UJKHTfMm3NRvschneXGab9Mw6DKtFLFtxLXqUQfaeK1k7tgxkLGYo-9-Ill-pfPkHopaoMc9OkFsW69DjenynID3uSwOdKY94Bs0KD0V51eIUWTTgSHtHHX9iMpYYjHjUBKc0h2_CfWQ_lLH3IFu27zElGk_EXMApeW6Zhk9xRA9erUvNBmNuJLM2Qk0ZtsKadu9qEpmN3qiJU4cew_NoMlA1wIUXqJBfHz162W14vFqp7Vy0q0vZJm5fwDrdd6R1Lh3b3OwWx-As-UTYCv8OFnLjtFI1MW17h9-WnEI580zr95E6dQx43yBG0ecopCNdqA4ST2MufLYSkHaiiV3F7Nb0Q_YOe_wrAytJuE7NFpjURvV6JWUBlONrG0ffbnA_rKqfcOyAc6zvGPjHPOwmgkM1LQhCNOHIM3R7nhP3eUzFO9XRpr77Tqy1eQMiCgRsiWLQI4ZeUdOT0-xxJdDFQ0JanlNQ4o55x-TrnL4p6sY7fL049Iz6CdGc6MTBJjYuJ5DMpecESiY7_s_9Q389fAnAL_ejQziwAfJO2zdfWe-ETI7pDWV3YfMfzT_KVG2fWl4dMDzdeYXa3BQ8AiGE0nSWGROTYd4A3rKE8h5rBtld5XEqxNEglibA4aFn60voE5yfZccSjLTaUYJyDpjp7JcklU2SNiUJGCFTjqy8X4OlDdZb9Qu-1dslYSc0YubS5-C4mZ0SwStp3hp6eaz-8XdFrhZejRcNcju0Vg3U3r0ph3t9Myn-WEGEQNyWvu44kzIDq4E2L2XjdcX2pqyNOZ1htj1EYuYgwTBlqY0Dqv-WNVC3o8Di0I92eszdQtyHYEoil-c4JZyoszefvdvR1p4xeaUamw6ay6tI85g-5nu_WlDu8TJhTsAp4XxiHzF-H2iAKxoNzD18HMTjTFX28f8lRMS_1rvS4dlah3g.r_A05TOJaS9Rpbus_-Odkg");
        return JSONUtils.serialize(obj);
    }
    protected String getCreateClaimExceptionRequestBody() throws JsonProcessingException {
        Map<String, Object> obj = new HashMap<>();
        obj.put("providerName", "BSP role mock");
        obj.put("participantCode", "bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("serviceType", "OPD");
        obj.put("mobile", "6363062395");
        obj.put("payor", "test-payor-1");
        obj.put("insuranceId", "189829");
        obj.put("patientName", "Test");
        obj.put("app", "BSP");
        obj.put("recipientCode", "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("password", "Opensaber@123");
        return JSONUtils.serialize(obj);
    }

    protected String getCreateRequestBody() throws JsonProcessingException {
        Map<String, Object> obj = new HashMap<>();
        obj.put("providerName", "BSP role mock");
        obj.put("participantCode", "bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("serviceType", "OPD");
        obj.put("mobile", "6363062395");
        obj.put("payor", "test-payor-1");
        obj.put("insuranceId", "189829");
        obj.put("patientName", "Test");
        obj.put("app", "BSP");
        obj.put("billAmount","87645456");
        obj.put("recipientCode", "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("password", "Opensaber@123");
        return JSONUtils.serialize(obj);
    }

    protected String getCreateCoverageEligibilityExceptionRequestBody() throws JsonProcessingException {
        Map<String, Object> obj = new HashMap<>();
        obj.put("providerName", "BSP role mock");
        obj.put("participantCode", "bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("recipientCode", "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("password", "Opensaber@123");
        return JSONUtils.serialize(obj);
    }


    protected String getCreateClaimSubmitRequestBody() throws JsonProcessingException {
        Map<String, Object> obj = new HashMap<>();
        obj.put("providerName", "BSP role mock");
        obj.put("participantCode", "bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("serviceType", "OPD");
        obj.put("mobile", "6363062395");
        obj.put("payor", "test-payor-1");
        obj.put("insuranceId", "189829");
        obj.put("patientName", "Test");
        obj.put("app", "BSP");
        obj.put("billAmount","87645456");
        obj.put("date", System.currentTimeMillis());
        obj.put("workflowId","7a549702-ddb2-4e72-ac21-438d1fe3c438");
        ArrayList<Map<String, Object>> supporting_documents_url = new ArrayList<>();
        Map<String , Object> supportingDocuments1 = new HashMap<>();
        supportingDocuments1.put("documentType","prescription");
        List<String> urls = new ArrayList<>();
        urls.add("http://123.com");
        supportingDocuments1.put("urls",urls);
        supporting_documents_url.add(supportingDocuments1);
        obj.put("supportingDocuments", supporting_documents_url);
        obj.put("recipientCode", "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("password", "Opensaber@123");
        return JSONUtils.serialize(obj);
    }

    protected String getCoverageEligibilityErrorWhileProcessingRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6ImJzcF9ic3Byb2xfODQ2NzMwQHN3YXN0aC1oY3gtZGV2IiwieC1oY3gtdGltZXN0YW1wIjoiMjAyNC0wMS0xOVQxMDo1NToxNSswMDAwIiwieC1oY3gtc2VuZGVyX2NvZGUiOiJwYXlyX2hjeG1vY185MDM1ODhAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6ImMzZTczMjUxLWRmZmItNDQ2ZS1hMDI4LWUwNzQ4YmQxYWJkZCIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6ImQyYzE4OTNiLWZmOTEtNDFlMi04NTBlLWNlMjI0ZmQwYjczNyIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiOGY4MzZjMTQtY2JmYS00YTMwLWI3ZTItMzQ1ZDU5OGY1ODlmIiwieC1oY3gtc3RhdHVzIjoicmVzcG9uc2UuY29tcGxldGUifQ.B556olsA0sNQDEnpsK6lfVryII7SkiuGwibo-wJ1w-bjYuHjjSzIZepDsUVk0uI2qlu3LxzuXOL0472zphroi1iBn6BVPukxbRhdJoQZpmFAVX6jUjiS3ChI7_KZoc3fgqF5NxFXJyUJBnl-KFEGTvDtZ79Oaz3EgqI9OiqqfhHTT42sZOxPC_4arTh6XAQCqiYlcgZrdfoLENU5GoVYbmn8f4Q6I1DPU1Jh9XFCBol_hq4m2LC8rkDfx9-22AJKj_VX9sKNaGipgwTwO_wzGvSsYjvZQlA1RXQQTGS5md_c8VRjJgdj1dTN0EgSD6J5DVOodc9ewRWx1pPXarheUg.BxDR6ngGH-F7qsXF.Cl-KTgwgQvOwagFd5IHsLHcVdTvga84OD2dV2fTgWIdNfBopZdTsz8xx4-yL66RrKgiSNICAMtXlfYC6PekR91Khc9Y1e7D0kERuTwjyKxg9dKGznI_ccrIOnJplQ7AbIjNS8ZssTcNJe5Lli-XPDswDeiqM3OkLV-DS6VOmYvk-ezv20OSu9D1I04KlTfxI4Jj_4CcnJBzSvjz0OuOxiU32YhFBqKbzDxLNUa5Ub94S9VVhXDgV_StZsUwEzUrJ4a_kpsj9tkBAN_04DriPcg74NkXvO3cdt_hJqXyHTTcn5jtk6N-X9TKDKlx7m7P-IbDgMa85ucesWsLrmNrPPcWmhAY6hO38aklm7ZeygIBl8s-xJ-vRHjvJ3sFAJDKvzaxbCwhzOS3S6Yow_onKAm3eCcbKVnzkhLM6jWTy1IFt2J6qusfjFDc_zqUB9HwXlu-8wWV1W2IRHq9GYbrpY6ERE_fjjKkk9ds_g3tBx1hly_mwmfkmXE4b8vsPlxOdlx_Ri0yJ50OE41GhKjZ2EJQMsa-rrkoxclvJqDJBFI0-NH-wMBMpgjSW4-vgr31MLFhTdym39BQzRF3ZdVyyducYaZAOwjDe2ZIiBNK1byZ76NTH2rKxG6ofrklEnoU8h366fz6_AxgklMZGj50pOIrtFrrYnGJ4eCuqbzjwYeqJMUsMELaCt23YsXcdsaFJOoeW2hxFnkpYPHbmch2-uw2skZJVO2asMTtvw2TODNIihVlpj29TPd7EwiyXgTgTV-EdO_ewW__hfYtvIudExmrTepBN14oMzc0tlOt4BTwO4nZuION4t8tqRJNptzNioULCxItEylHmN_K_gUbACFwYVVg6V5-_FDds4Dpiz1GZ-BQAh8360EWF1hQiDvereg2ly60wRJ5zAIpAtYaJ48XVKCPvQq5HNzzD7e2cB8UWN5-2kx3bgxY8cNcNTd2WJFyIWwqKgJfg1V7cgSjZdFLuTpGwBqrAkuEGmDOytQJ4prtW0y6N9lD5XmcTpI5Kj8iie-5-_kfzdp1_Dl1fUd1M0NiQeQjo1T_08B5H0D7zU4xEaPfbVmKeoyfut_Pvippszo_8QZrd-RjcEsBAp3i46Pz72hg8KnV9Ef6x_R-iBRiB8PSJppvUHZhyclFT-MIEZDe16aswOaJP5-LSFM4FZz6aPIkOlY5XmIjbE8_2Y1b7FlvH6PRD3sP7a-265M7uHqwdyNaWxCu4_XJRyER_L9TCB_wzCoMqU8Dj16vhm5xaxndjHjNXJ-aUjp14Re7M0tJ4Fd-iy8Zp6LlDDCLFy8NkhFbP7rKlWEb3NyO-5TJ0ygDmUFEGsAaKaiqHFRT2SDNbmPXuGmDmhwMEQQoNKF-PO-7DZoCwlfiwawIZSyWtjhqwKtPcKkipidbkoS_R3KPz58h08z1kl3tKZmVgnTR4aspHmD52O9h2Hq-1dt_ha43aIrQRtsrea7fLjdJqZLTZHpY3zDzEb6xLztLDXp-480wScpe592GRk3IaTbDbNu679q7emWnJUYVBQdSC9QKDbKWJZ98CCoQphhknh6tnhKUvrz0Yq6_MD6jkb48iVToYwHxjZeG_CO5pNA0qoAPneEOMDDB0cB_0MgE_9HQAdMn-52bj4m-GS87evHZqiSPKaOJ79Aag33fG-gkNdKI7KqqI8VoutofzQ4pA0tc9KPK0KeZp4xnyQE4MVYXD-ftAvC1dtkabiDEpZrDU9GMLcsnH3ybDNyApTw8usklJPwBb1MAlhBOFf7giYMRP6QWb-hFGWEqpu1j09bNESxlRUCVAlg6AWuRhAL3iqDxSWtI3TZ6WVMCKOuwQXUC-0e4FBad4eGKt8Z2gXYZZPIWqQUnyv9tkkusnxbKn_0IA3nPNnOLGGqq6GlJPJSMcXTSBbC0-KqI3dU8AbAB1y3h6skU5ax_YOJldoTRlttD-9SW806Iufr-ZLfXnIbt3X3CNQ0L0EQyGWs2hauA4mehBtDBo_mn05yFKjYvnvwZgD8sWftQOQUC2Ac48dZUHDvD6ejjCnI5JZXYQVpbVyK5vJbWyiDHpze8G3Tx1MnT4B3wpl_LFsHff0VwBsZVGRBlU5JjONDnmWW9fEejn1OSLi5HzhVVEAKfJPri_Pe2BRJ4Xh3DphewUsICLa2rJh-ZAnkZvk1BYrv9ZCpLbenKiiqrdBb1IWAqBNj3Px4YFUbLn8LuSxpJ8pntBbBYRtXGYgCldOHsx6R-XX6EranjBmv7aMKpdlGQz9RjxqD_DDk1MTQ9pMNAHsH6aL0B7pMpHXFmD_F1GMoKx_ZsQRIuegaljjIFEf22s1l7eai28zo6aMFkDSGgrktuTKReQmf8A98HHJw1ZDX5NET1YBw8IsFO8iVP7GFKk-rhJg7BDmOhgqcj9v08ylbbVQ2R2Fr-oF0FbQzjV4GBDvTeUgR1IbeIjOfX2mK5SgxCNiSoA60YAUvp1muZxlWlFsVm8x78yZDSiBOJaiqMN8bJHRCJey0bvb--toJTN4-NumDvdcoDr4SK_Ld15MrL6sjqbzUH2kIO-bqVDBba2krOJKrSCPwrkSG23vzRkfizZRhbx6SFiXH6Licz4q0uFplOpepIsEtmuvcrcGDtCw9jA_c6OocRJZKPjP3glmBMAeZTGv8uD_wo7E-JeTwdvo2iB6wC-JMy__TtdVA6deENMIxq0RGsx2U64KuXmnncbIsWdQI59BHIouMlPyTEIaEwHu7SgJmFWPnn0W4KPBrW25XxX4cWY6ME68Xp4c5h-eVdVKUg965cLGhbZp0YE8Pay1nu9x6_24tinJGvQbiDQJg0cLdpMBXQdgc1xjQRbsIA3CzgrWAioqWrK721NuhP_DGSmcBUWiY_oklU8yI3ErPS0_VAWnB1_k3_1on9StmjdMDvDvCcRwBd35kAfTSiAokjE-dWIjGV8zoqeqQP5srI3N9bFJyySZq8Ek0ApLP9O6Dx7n9Wy_bB54t7Ysk1nCDbkpugaBe6OV2fq9rmu80vvySRcvlwuAlB1jt9Z6ILFCOg99fMdHHylLWNyPBCfD5-d1Sfu25QL8TJhDFiMm0PBJlDFclMi3stV_8gNsh-HAcSCqwqFO4Wccw61g648KQ-lEtt0XY0Nr2MCQBtIA4MH9FrTL1wVYDGk_xDLZ2rzdBoD-cbR8-8xyRQSVmZuV2s1M-Z9noqs7fsSkdENj1kyqJtqEr_EQj3pe3RoAmmG9Y_R9IfxuQpRB-QPlHgiV46A3kliNSQ1iapAZ3H-E9kTpOUSV1J2CjZtszmLdn1pL66inVjhxvtW4qR66zQnPJmjk_xsVkmdHrFUPqUbQFyXaG94WwqWYBgtOUHyrz_eYPB9YCs5cqciCy2JjfLnnvCnVB6batPVzjUkyYEucSk7zdwr42QmsGlu0nMqP1fTSE8CIsC9r3C2BlquutMhwV8BzqluOtZronULOL5HYp2xJ10TXWAqslCsFomqub8_fEUkixGTMKMV9ZzxHspFrfheMjgaLI_Pq_1IwbGroyqPk9h7B15uw9wpfxOU1tSq-aXjzIhQcHYro0Z37REll4qKJv6mpNezCx1dPuygpoe4H3xxvmoZd7hdxyo9de4DL3bLcAD2CLb8Ejbuacr6WcZGeYoH_Amw7nFISPwm1ULQRdIo0paKcz2czHPMGxwHUW41DVcXX_DAP90cNyxMad3zkYQVsffB3_GMhMJkpsFJFgFwJDmHOH_7-6H6F5mnP0hgzJ1jPOg7DFrD5Nbg7N94N8wjylamA_3KGFI-x12IrBGuRz5ShJqavEDUTxrRJm-l4pZwtEiMKuc6kYe7N5fB_eFGJyo6_HUDWbTGN4ecJrFi_qLOs4EORF9St5tNh4LA5jWP9jKeXFOT5kSOc2GpamkUF3O1axI1lO5ZAU2yztDbg0kJ00rOjLe23cPWzkaY1f9TGTIcuJ8X_qS8nkvmuk7I1o11wOwkoJWAF6hPtvSKYITLTbjGRBnId2hqxXqlm6R3TkqiOnjBgdIZ3BSYFeRth-OMDuSDKT5IpGzpLgrAZge_yN8TZxWsbTJOMLf7tH42I2VspBv6vY-4Wg7YyRnP9Jy9MPfqvfrYelsQFNMqmkm9lxN57G4BqyNA62u8e4jqKy71K9hqG6bJZcx-iAEBtJKDgPf1Ok8VT-90C4_ZcicJPbBEpnZRyxHfx7GcNnHmLUZxzZNBCX_KT0EPuF86r22W8mKzQoH25ZGjkXqOhSqqvx_MKS5Fn1hYtSsKQyEqBXlAnoHQNKsoGk4obxYuWAtgvfxtnetjDqhPyCr95qyZ6ihVS-VCs6AT1OyxRCUkb0Gxv2taHLmVcP3Y15Rs1DdM5lBCL0P8JhRuTyUAC_vzqlUMBkJqxSzoI9haoToNlc7bMPTwMyyEU1PCeyxOuUcrxBEpWN1IcicIXpjio2iYDW9EKYESElxYj8qyZ4tl8gQus9ekFDSXfRp_S1VVv-_WQixlRMf1ZQOLEuHkybkAI7NJSUTiySXEiVE3EnkeF2TDM1swyTf8iBqjqwkFnob45JA0vIFaTn9qGtRoQt0mx8X4SHz1ne4N9aOwl4JZZRyr0ref72Unc0RHRBaojjnQKQHJpBtemikRWUSbOESmHRH7KKvYfGaGoUQ0Z1lxdFZg3pbmke63WyVApxFHDimbBJyafyRp11-CxUnbWIg5_Td3huAYE-JWDUgHqdz69Rp1zhEmL7MPD6hZhs7_y3WRZYhTL4rh0mg077vDBrxyHXp8G97SED0hQ8slFyr4gASGaHMl-h3iTc89JceoRf7hbWFHgTLjWXA_8ZyOVYhu1hVfmVuPcXbw3T59TjxTFi2CExT8cNZ_RzC4J94CI2-bT5P0g6q8zqnycn1SZbrdQxcvXjAbYgM-qGs5n4Eegr0bKsjmFfNc-zW5UfJvBnHSExfx3dnTZIp8ahjx1bLa3354RwZlOkGcp3v5Lf04pQ-UoPqZFQBa1k7Vrs645LJKWYVXemMqAKlcUgNlNClHOylOGNWPmeB5wGMbsb3EMImtJSJwT4riZtcAQbeH3XSYBvnmisvy_nXFNvZ6wTOA_MzLTxEmPA.x3NIztfD2UJAxMctfbh5vw, responseObj={timestamp=1705661716308, correlation_id=c3e73251-dffb-446e-a028-e0748bd1abdd, api_call_id=8f836c14-cbfa-4a30-b7e2-345d598f589f");
        return JSONUtils.serialize(obj);
    }

    protected String getRequestBodyClaims() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6InBheXJfaGN4bW9jXzkwMzU4OEBzd2FzdGgtaGN4LWRldiIsIngtaGN4LXRpbWVzdGFtcCI6IjIwMjQtMDEtMjlUMTM6MjU6NTUrMDAwMCIsIngtaGN4LXNlbmRlcl9jb2RlIjoiYnNwX2RlbW9hc18zNTI4NTNAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6ImRiNGU0NTZhLWM4ZmItNGQ1ZS04Njg3LTIzYWQ4YjE3NGViZSIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6IjNkOTI4Njc4LThhMzEtNDkyNC1hOTUyLWZiOWQ4YzRjM2E1MyIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiNDhiZDFiYjYtZmZhMS00MmIzLWJkMmQtNjA3MzY3NzY4MzNmIn0.sjObdpn3VvTsVzDwS65JoFJ9ESfw67HCWmEVmcdpX7DDCPwtSX1_vU8Rzsx8NY1a-hcJTcF0Z09bHpldazuFpCKwDOgL7ot8L3kzG826_XTuiBWmBrew2DGAV60cKyteOVu3LggWAu2JIcCLFTvrsP884NkwnTGweIgzgjPOmsZIvJOlOk4El0ApcWp6Nw64F5otjMuilclgdsBbKxqFGfUADg3YRaccL_7i62BQf_XSqjOhoG3iReyjgfohUiqDk-TLp-Q7Rs9uRZczhI_mOkEECThJ2ifX12gLvcQkBUGTgf2NBK7xqG8H_0XYoS3tvd3xE7bHZl3Q8lgIhDpruw.3K0kcOeZ-ztm6ptM..i7GouA0111pjN0kXdh7lbw");
        return JSONUtils.serialize(obj);
    }

    protected String getPreAuthOnSubmitRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("payload" , "eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6ImJzcF9ic3Byb2xfODQ2NzMwQHN3YXN0aC1oY3gtZGV2IiwieC1oY3gtdGltZXN0YW1wIjoiMjAyNC0wMS0yNFQwNjoxNzowNiswMDAwIiwieC1oY3gtc2VuZGVyX2NvZGUiOiJwYXlyX2hjeG1vY185MDM1ODhAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6ImE4YjFjNzE3LWFlZWMtNDVlZS05Y2FlLWU5MWRlM2U0MGY2YiIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6Ijg0YzNlNWQzLWQ2OGMtNGZjNy1hYjFmLWY3MWFjNmM0ZGE0NiIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiOTUzYzliZWItNjJhNy00YWMxLWI3MDQtODgwMmViN2ZlOWQxIiwieC1oY3gtc3RhdHVzIjoicmVzcG9uc2UuY29tcGxldGUifQ.guh_TKvvyMkHoB2swGSuW3tKAYNcACdippSKYI-O8Zi6-ZJ61QKYRJjspc0A-ajqYu19HI2TI7_S2NFjXFhHPFyiTXcE6-92pQ-ShfYc7pFNW7dZByjyBWlZ7x9ZsfWktaAuXfTdnTovsVaYwum27RU3dnKBejV4jFwBpuC_yzgpXOU34nhhPr-1DXShKPVR6DQmaeyNzI-blGXDSv6I81Jr0ACDPT34WNAqjVfm8tHM9gWXGV-yb3zyETRI42ilE8rRUvK-aGlGhJUKD4HEwlNunrphW9y6ERU_3Y_KqYrp2kpEfmPvPxACq-ROBHQ-xSo-3O4IgxVX0r9ftONl0Q.pGwsZfONj92PRjhO.VDRRvpqKz5Ip8C948vELJ5xsvd3xWlSOj7ShvKOTXay-ago9GUcOsPfvnoMU2-Y8W-QWgP2w5yxOjhMzcvycgVXYpX4BsujVGRzpbBUw7L-JMteDpR6M2ZyvZrxQR8peprzUG50U6lauP_JrkCvK_iQ5ZnwVK2b-EIX_PqZ6o_ip05yYNiy-R9E1KEtCWfF538WVEAtUcgC3Z_UG-O8FN5IA82CEbhWE8HQXcXaYR3E2lpojNqLX0Y12jj6y58WjaMCYkBepbPmF6Tz7__scmEOC8EmLRJBveC_u7XdTknYlcvgPH36zFls84ATaUYJcKOIluyiCiZZbnQJh1SyyIy1RD3fvs6Gs6BPjZYxKCJWw9CZyBn_QBlx8iXSjbpViS_DlzeEcCdjJ_HVmSBSmuOBpKYectTfNdYeRI0MsSyoKBQch7Mjo7414EjRNkt_kHX7r7gYNW5rSKkpln_Odxr5GJQanSNoPxsAvZOMfXfaeaVkxSR8DGor_OEVAYUIXMkixwajyHexw91QwuXvH-pjbv9Q8sCZpFzBzyCFEhhbe6DYYW8-6pb4frdN3B7EZ2Yq81yLdy8yXPe-igED3Q1_mBR8cItzIVUJDyE7ZmmrK95Xa4ytkOhuJj5geDM8BQgFtmo6_zIshuctenco4Zqy3aJdT5c0dGgDTAGo4y0_WWKUWIkePdoJFDG62W9bUp4lKDPQ3k6C2ajcZB7nKkje05zmYHUrmwNBd_OcQlIm2Sk0hQfjSqZUon1nm_Nn8hSgfL7CV3KqzbwMtlPnN1Z-iUQq32MCgcBv_HT8OgCqZ2e0Ye_sMtV-v_tvzXFpdM7WdbODXeojsS4-GVrJQdwipXVL9UL8pJTtYydfvEMf2qDWBwLp1Xx49Lo1ctnkn-bHlMwsbNb8CIcDdDpIhQcXSs8oDTpcl1sPc-5e_Vjzr-_E5pvSp8HbR5BWVfW0hKuubrvfYD4Jg-6Yp3cy6OPfO5s0f68lQF7GW6gjM3GEjNvUWCzsbrPw7wjoGbwEy2wN7UvfY0SML_VMCag5u3z8RKHJxOG08FibYmMBCD5aA084YVvB5-SbPZTYLa5K4HJnrAkpGIT1Z0OCqpKieWGAxvdoq4S4T8LbPi7g_bYw76oxeSjvZRrqawlXholdUTfg8QNwDLcVKkjwWZApNFPgmnFSlNbpgRuhwL825l6DcQTsW9RpcIEWq484wP2qdOTk4DZmpLx8nantcF0k75R3q1UHanpY1-q0i_dl0qvgPAqtDSeghcT7Zd_rMl7KsBpnJkniHmcX6urWAAiaHcD56TQueYJUdwMfTLqav47rBjrrnkBJvttOh6C5HesVxY1oXvxbqxKMwUGkwhhrR6hVci34e0mNw7u-1v4LV9tDStdmj6YAAtqT-FbqJ5vu1XzbgpOxYZ7lowkpxEyMKgipYn36pTmzFkJweoyXBd1bQJBR5voMcLWV_dzeXdcHqTrBfpLLfBnOT2ZrL3mbKfjH9_0mDpWyblssinE6PoQhq-LWSMxJUuQwYQ1AwdPstXgjm2ir5uo6vq8DwIgPLls64ZcDkhXfbtkn4fDJUDCIe0y9yyPP-EDbmWITI-rXJ_Xfq-ls2A7we5HQpwV0dYnvkqo8Y5b2f6FwBVaO8JQnK2wFjBv6Qxe3wfZzJcwIxdIXzbSf810rXaSA6D8tKRHwKzL4CwjsQwPZM0f9yY4BHosMsnON3pQ6R4X4Of647v8SyTha1vrTt-LOnxWUDzCEg_NfVnF08Ub37HCanoksz-D_iy-Ky2TiX2noLmAXe4bsZ-0mJjPSeJs0MVdcwhidbvGisJeNSR85aUhYty6Or669B8zNo-nAX4XfFhK0-EL4LV1mBbAVpopPrfm_yiE79Sqb5JSwCFIOFmduzs6ovV9e4uwVKq4Pqrnez6ERdQYIhWwaP4esgOfFesa4wBq-_3ovtBPxIfSBmXxfhfaJkxD_ETtCtORF45mRD4siXMk39l36GnocALye6q9sKu00BqKNKM3on-026Ub6kxb7mVBZKMMtHg32Hu3s7TlzD4VsPdVewf_QzNh6MD-oECFmatsxFMV6TNB1aL9XpBmGlM8-t-ErdxUhZ1GL5lDCM3BhuSVa8YkpQ5ubJY6gPLdfFshO9gw4svrM-Tq7PMVR4btQvKoyJkKzoRP7GRmvCO-fNNRLJdvEjgW0zQY1hEIESLGL1JKeVGbGtAq1UzTTpacMxESF0xSd5Wv1UzI3PwPuFT__qixMTxhdxkpP0Lb1fXQEnpcBUCgAHZY9vbgN8gkzLdPhS1BHJhjxYyrie76O3UTcEUs_nZlOX7NyXw_cMtWtIx8uvL1_-K5A0UjaNpdkBilUIZZ5FHLSUBWWtVaGRpGvA_taSWKFUBUZgFMmqeEC3AMsyWomEVsQ_pH6cGZvPwYhveaWhmh9B7zI46D-59gE8bABxM_zroCVwf_WBtcSinXExNmFIsBNUu1x8CcwnjEMEjhjUx7YyTgqLdgnnpI8PkFKrns4g1DlcDO5c0f63ZV5E3K7OxNj4TYIpwLa02GtTlO-k0TBYQqdZtYZcEBk9i3G2wxFtOQv1hE2h7JnN6SK4LYsPuHO5HpWvtSXPkj2s6pCu23En1qn82AFJI6W5GkN8sz7LwZytuTn2fvt6F8RWwJYOxZl2hTef0SCdfHiqh-tWTPBP7l94na4P8tHwtHsvcH9xsvrPOwEwjSSUeXFKhnoDp1OUvVzGl58eR4IkUGWlWN-D9eEpEcmbhrtCZZ-PgPs-Lbp7Bgyi_2DEWhrgGD4oWdx6IGMVpokNv3HngjLtGLj-l2JjeY3Pyz-AatkJHqW1sHnDVIfQEth5PS9YpcXbHvJ88MA7hu_lbcERXNhZWMwOqmp8amalr2xqvRbt101NInLgSl10mQGaTd4dRQk1P1khdl-7kpwNNNkXW_YU69bKelTkY_2nFjFU0DiyjcjsEQo_qJLWURlB6AgEuP6uLbqpnlxsMqaXstwYHyw9vsFRgmi4rsCY3PZsYz7P6RNPUCqu4akUheTAwW4Pn-RBeRek3T3Y7g5GPOeAhkKxTx2_pCP16Ps24puRBfQILdG9ZrubhoWQGdd3iWq9s4bvr3dgjOx5uOUi9SUPZ1c6oMhBQ9WeONo_AgPkEXusjmM8Behjyr7GkGSDD62POExGHJQe_xpMC9ZetyHoNpFO3R3aAMAlDKmIpsoTP5AO7IGkUfiVYhsJDFV8DfVFtdoDAzPuciFILcXtQV5VJfM5HjVPZqi9qMK5WNMBc4URCNqefKDdY9_QCycrNV4evyzKIKDuqvAHRr5f9fMhIfnnMoUAtcqV9iejJv_lV46awEJ9pqNIrv5okzBn9iuzEg6znFPPNXVivHFBlWWx3yg9tVEFtyPi-mVR16lU7g-MVx5UmybSn2iRZBvHR1dN1NsMeU54gKgobRSt6qjXa8T7D2METMJor7KpevCcbkvKE2HTUDWIvd53gbMDjvDiv32s2y05zy3SPqNUYAmsNjlZyMykQsacPLOPdCQQ4g7pCT-6Aut_LRhjk2usoYBhMMoKvOjsskkHD1OsYontXdhvS11qxU-m1bwD5UDGJm76M4fXUt9Tdo72F7kMbb7ysIwl9ZionBgIPeQ7npeqxY9HOiQn-5WhNG4kOLWw6DJ0BeXqP5hTHJduVlSM4uAG1rLZTI2P_YYYF2egLQzXOfYPLrxfkNL4RH8X_5X9YUXvy_PvoCRpNnSb5PvOfFuj2n5-g85IZEVwnGplO4deXS12cQcPbXg-YI8Yl7yPphHIOEkaGMWCK6MclCGa4IlWNBxk6PKldZtnjz7upiL8rCZK582yDmr9WhbmPwZ2J3GALcBD8kCLXyCFaDvupQ5oGoy4CZVoa38MchHFDvan9bGip0Q_kQJuHv455LIajwhUyc7L2_6JTCvqQNBHDCf6XOchjsHHRA_KIxzpEIxLqp_3R15lWDv8nax7eYEqHVJtLVqQ8wsj5bjVgE9quNpP-0bF7PsR2HhdvB7DSkGniUqrRiY7WKrH5b30R5vyvDVd-tq8Zpco4pA5Dr1uS55S1oVQ8TUUkwANg0h4cyq6TCcIau4oOmCE1lDzFmxGtZrb-w6T0PLkIaNOYdcmcvDFGyBZSSALBRYjUWR_JE3nkpQFhduagvnXVTjjBdF5fZ8ta5BlRTZ2fwFOiS9B4q2kNO6FDRe-9OdYHYff1P8mK4Jl-B91YhfQkuRT2i8KrYQo7v_YJvk5peQ273Ii4IfP_S_et7YE1CBbHAY0DVeH3V-k7MMvK6Y0kXjJu4xrQ7sUSQp_1PVEH_BU37kr7xfFGM6xhtTR-FfTn95TpO5RVWm_HaZG1I0z4AkLttvftGEJcK-0lokWR1AskUvzTONyzZv_7Q0s1pjPR_ZB9iDIKwl4sAWCr-2K9P9Sgrvf44oPmw4zmKFnpjEioieLIIPOtCyIiNHbJYAv3cI0l0GA4gldgP9WZOcIc2O3oe_QplKFpTbkmqdlycOjeLcMEFAbcKdewMuyhtXzr6bYraufpBp5xXxizTghxDTAzybzmbGVqc01MOCrBkesXSe7EM3IWAp5jGGgJDEogtE9xJ1EdrYaXz8SiBKFRYK4vpqsfFUeqJPcohqZHm4OpTIAmQvBU4QklsCz37LS5IjOVs6QJJeKrpjlKF6d5dT9s4HIKQBKiMvIt9lMOGtA6R4R1e62Cx-moYfcviuMGV7LeROBRtYnVbtxH0S_xHFvelkOLUXNtxRF2hRJ5O0G6Mao0m2GRehqQ8OPI5oEVDw9aaXIkx_mii58QkFUnDQ4fooQGfOrcqgjCkz4bIN3wuHKZP3FAUizVPxYe84xAK3Qn4KQODaN12FbHB-LjhTrRVGAGl72lodLq19pHp2t86Ui6E6A0G3z6z3XqkwOTMRZST6jN1qo6dQUu_S8_q-nk7WJB2hGU1aClogKeHAG__blzu62tHIW0MfpyUVbDLvnZQ8EIA2ZqFaJPJ7X_AoUtseCVtFWL0Fx_55B0HIVqBCEMp7pyPPmG22BiEjQz0DLwDaPN2UFk5SnNFgExH9tEUcKAS41Ku-3Ee7t6QqpBRjqsQFcW6edPQ6koBFldsTeLM7g5-WiOn6DgdnKb7WuzabaiE9cvvIzOee9bEBSZ6r65R8HHDta6ydoPvr6hzD758bIdBK61OIrz4go9mYH44ddx4paXAz0nv9FIwWu27CftYDvszWOAeZ_vD_MvBGZOTExzmc_0muL_eQ-wRvC7FWooCI6pe4gUt4kcH3rsXDW3FCNvFB4SoT7BzlNawqgFym7kuJRbV0FsbZrX8qWZLWxbMbcSg.2Np6CQa0ajggs1kBhOdGLg");
        return JSONUtils.serialize(obj);
    }

    protected String getPreAuthRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("payload","eyJ4LWhjeC1yZWNpcGllbnRfY29kZSI6InBheXJfaGN4bW9jXzkwMzU4OEBzd2FzdGgtaGN4LWRldiIsIngtaGN4LXRpbWVzdGFtcCI6IjIwMjQtMDEtMTlUMTA6MTQ6NDErMDAwMCIsIngtaGN4LXNlbmRlcl9jb2RlIjoiYnNwX2JzcHJvbF84NDY3MzBAc3dhc3RoLWhjeC1kZXYiLCJ4LWhjeC1jb3JyZWxhdGlvbl9pZCI6IjJhODQ3ZTgxLWQzYWQtNGU5ZC04ZmQ1LTExMmYyNDhjMDI0ZCIsImVuYyI6IkEyNTZHQ00iLCJ4LWhjeC13b3JrZmxvd19pZCI6ImIyNTk1MTk1LWU0ZmItNDVkOS04NDI1LTgzOWYwOWExYmNmMyIsImFsZyI6IlJTQS1PQUVQLTI1NiIsIngtaGN4LWFwaV9jYWxsX2lkIjoiOTUzN2ZjZWYtN2NlNS00NDRkLThiN2UtODdkZGU5OTdiOGYyIn0.eofxxmBFV6AdKwtXWgrJfU76S_NnAFDmxwCxFF9XXtT4amw_pSmBq8y0M_WWel4n70RKzsr-Hk08qa3T1NzkLWHKvX6ZFcIqgERbRxdfb6qu-jtA5DSul_WtUkqOf9rTjBdPMhCGrw1GNhyrv9VcRqJep8zyqwVyDDgZ6TtKl44xK4MH9hDhK6ZqNB8I2V7NSaiWbIC2Tz1NJ_YmaDMYvW-zmc2okA8R-2d6BrmvKeIPVKxLWsL6gZ-dpBTJIIdKN4qOr1sDHpbyT0XWKGSZWdU1gv20PIZ317SyF1MhsqcVQeFFWOAPDssbgs02g60sRkiwYrng9WSrrKT_5KnJJg.HOJmTcJivz-eTo-l..JGOqlY8NLr7zUGp-3z7k7Q");
        return JSONUtils.serialize(obj);
    }

    protected String getPayerCoverageEligibilityRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("type","coverageeligibility");
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("sender_code", "bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("days",10);
        return JSONUtils.serialize(obj);
    }

    protected String getPayerPreAuthRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("type","preauth");
        obj.put("recipient_code",  "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("days",10);
        return JSONUtils.serialize(obj);
    }

    protected String getPayerClaimRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("type","claim");
        obj.put("recipient_code",  "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("days",10);
        return JSONUtils.serialize(obj);
    }

    protected String getTypeExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("recipient_code",  "payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("days",10);
        return JSONUtils.serialize(obj);
    }
    protected String getClaimApproveSuccess() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id", "3730d51b-7371-4d34-8641-a005dadd2286");
        obj.put("type", "medical");
        obj.put("approved_amount",473784);
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getPreauthApproveSuccess() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id", "3730d51b-7371-4d34-8641-a005dadd2286");
        obj.put("type", "medical");
        obj.put("approved_amount",473784);
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getClaimApproveExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id", "3730d51b-7371-4d34-8641-a005dadd2286");
        obj.put("type", "financial");
        obj.put("approved_amount","uidweuhd");
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getClaimRejectExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id", "9537fcef-7ce5-444d-8b7e-87dde997b8f2");
        obj.put("type", "claim");
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getClaimRejectSuccessRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id", "9537fcef-7ce5-444d-8b7e-87dde997b8f2");
        obj.put("type", "medical");
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getPreauthRejectSuccessRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id", "9537fcef-7ce5-444d-8b7e-87dde997b8f2");
        obj.put("type", "medical");
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getPayerResponseUpdateRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("requestBody","{\n" +
                "    \"request_id\": \"a16cd71c-159b-4e62-a2e3-6684341b3570\",\n" +
                "    \"response_fhir\": \"{\n \"resourceType\": \"Bundle\",\n \"id\": \"b69c9c5c-9feb-430e-94a8-9d625e0a40ab\",\n    \\\"meta\\\": {\\n        \\\"lastUpdated\\\": \\\"2024-01-22T11:45:19.143+00:00\\\",\\n        \\\"profile\\\": [\\n            \\\"https://ig.hcxprotocol.io/v0.7.1/StructureDefinition-ClaimResponseBundle.html\\\"\\n        ]\\n    },\\n    \\\"identifier\\\": {\\n        \\\"system\\\": \\\"https://www.tmh.in/bundle\\\",\\n        \\\"value\\\": \\\"1e03f6b8-ee0c-453d-b12c-fe30ab0605a1\\\"\\n    },\\n    \\\"type\\\": \\\"collection\\\",\\n    \\\"timestamp\\\": \\\"2024-01-22T11:45:18.327+00:00\\\",\\n    \\\"entry\\\": [\\n        {\\n            \\\"fullUrl\\\": \\\"ClaimResponse/1653ebe8-b067-4aee-ace0-ea94a57182df\\\",\\n            \\\"resource\\\": {\\n                \\\"resourceType\\\": \\\"ClaimResponse\\\",\\n                \\\"id\\\": \\\"1653ebe8-b067-4aee-ace0-ea94a57182df\\\",\\n                \\\"meta\\\": {\\n                    \\\"lastUpdated\\\": \\\"2024-01-22T11:45:19.143+00:00\\\",\\n                    \\\"profile\\\": [\\n                        \\\"https://ig.hcxprotocol.io/v0.7.1/StructureDefinition-ClaimResponse.html\\\"\\n                    ]\\n                },\\n                \\\"identifier\\\": [\\n                    {\\n                        \\\"system\\\": \\\"http://identifiersystem.com\\\",\\n                        \\\"value\\\": \\\"d446dea2-97ff-4e13-b259-8865d40e4710\\\"\\n                    }\\n                ],\\n                \\\"status\\\": \\\"active\\\",\\n                \\\"type\\\": {\\n                    \\\"coding\\\": [\\n                        {\\n                            \\\"system\\\": \\\"http://terminology.hl7.org/CodeSystem/claim-type\\\",\\n                            \\\"code\\\": \\\"institutional\\\"\\n                        }\\n                    ]\\n                },\\n                \\\"use\\\": \\\"claim\\\",\\n                \\\"patient\\\": {\\n                    \\\"reference\\\": \\\"Patient/RVH1003\\\"\\n                },\\n                \\\"created\\\": \\\"2024-01-22T11:45:19+00:00\\\",\\n                \\\"insurer\\\": {\\n                    \\\"reference\\\": \\\"Organization/GICOFINDIA\\\"\\n                },\\n                \\\"requestor\\\": {\\n                    \\\"reference\\\": \\\"Organization/WeMeanWell01\\\"\\n                },\\n                \\\"request\\\": {\\n                    \\\"reference\\\": \\\"Claim/CLAIM1\\\"\\n                },\\n                \\\"outcome\\\": \\\"complete\\\",\\n                \\\"total\\\": [\\n                    {\\n                        \\\"category\\\": {\\n                            \\\"coding\\\": [\\n                                {\\n                                    \\\"system\\\": \\\"http://terminology.hl7.org/CodeSystem/adjudication\\\",\\n                                    \\\"code\\\": \\\"benefit\\\"\\n                                }\\n                            ]\\n                        },\\n                        \\\"amount\\\": {\\n                            \\\"value\\\": 80000,\\n                            \\\"currency\\\": \\\"INR\\\"\\n                        }\\n                    }\\n                ]\\n            }\\n        },\\n        {\\n            \\\"fullUrl\\\": \\\"Organization/WeMeanWell01\\\",\\n            \\\"resource\\\": {\\n                \\\"resourceType\\\": \\\"Organization\\\",\\n                \\\"id\\\": \\\"WeMeanWell01\\\",\\n                \\\"meta\\\": {\\n                    \\\"profile\\\": [\\n                        \\\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Organization\\\"\\n                    ]\\n                },\\n                \\\"identifier\\\": [\\n                    {\\n                        \\\"type\\\": {\\n                            \\\"coding\\\": [\\n                                {\\n                                    \\\"system\\\": \\\"http://terminology.hl7.org/CodeSystem/v2-0203\\\",\\n                                    \\\"code\\\": \\\"AC\\\",\\n                                    \\\"display\\\": \\\"Narayana\\\"\\n                                }\\n                            ]\\n                        },\\n                        \\\"system\\\": \\\"http://abdm.gov.in/facilities\\\",\\n                        \\\"value\\\": \\\"HFR-ID-FOR-TMH\\\"\\n                    }\\n                ],\\n                \\\"name\\\": \\\"BSP Role Mock User\\\",\\n                \\\"address\\\": [\\n                    {\\n                        \\\"text\\\": \\\" Bannerghatta Road, Bengaluru \\\",\\n                        \\\"city\\\": \\\"Bengaluru\\\",\\n                        \\\"country\\\": \\\"India\\\"\\n                    }\\n                ]\\n            }\\n        },\\n        {\\n            \\\"fullUrl\\\": \\\"Organization/GICOFINDIA\\\",\\n            \\\"resource\\\": {\\n                \\\"resourceType\\\": \\\"Organization\\\",\\n                \\\"id\\\": \\\"GICOFINDIA\\\",\\n                \\\"meta\\\": {\\n                    \\\"profile\\\": [\\n                        \\\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Organization\\\"\\n                    ]\\n                },\\n                \\\"identifier\\\": [\\n                    {\\n                        \\\"type\\\": {\\n                            \\\"coding\\\": [\\n                                {\\n                                    \\\"system\\\": \\\"http://terminology.hl7.org/CodeSystem/v2-0203\\\",\\n                                    \\\"code\\\": \\\"AC\\\",\\n                                    \\\"display\\\": \\\"GOVOFINDIA\\\"\\n                                }\\n                            ]\\n                        },\\n                        \\\"system\\\": \\\"http://irdai.gov.in/insurers\\\",\\n                        \\\"value\\\": \\\"GICOFINDIA\\\"\\n                    }\\n                ],\\n                \\\"name\\\": \\\"Demo Payor\\\"\\n            }\\n        },\\n        {\\n            \\\"fullUrl\\\": \\\"Patient/RVH1003\\\",\\n            \\\"resource\\\": {\\n                \\\"resourceType\\\": \\\"Patient\\\",\\n                \\\"id\\\": \\\"RVH1003\\\",\\n                \\\"meta\\\": {\\n                    \\\"profile\\\": [\\n                        \\\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Patient\\\"\\n                    ]\\n                },\\n                \\\"identifier\\\": [\\n                    {\\n                        \\\"type\\\": {\\n                            \\\"coding\\\": [\\n                                {\\n                                    \\\"system\\\": \\\"http://terminology.hl7.org/CodeSystem/v2-0203\\\",\\n                                    \\\"code\\\": \\\"SN\\\",\\n                                    \\\"display\\\": \\\"Subscriber Number\\\"\\n                                }\\n                            ]\\n                        },\\n                        \\\"system\\\": \\\"http://gicofIndia.com/beneficiaries\\\",\\n                        \\\"value\\\": \\\"BEN-101\\\"\\n                    }\\n                ],\\n                \\\"name\\\": [\\n                    {\\n                        \\\"text\\\": \\\"Abhishek\\\"\\n                    }\\n                ],\\n                \\\"telecom\\\": [\\n                    {\\n                        \\\"system\\\": \\\"phone\\\",\\n                        \\\"value\\\": \\\"9620499129\\\"\\n                    }\\n                ],\\n                \\\"gender\\\": \\\"male\\\",\\n                \\\"birthDate\\\": \\\"1960-09-26\\\",\\n                \\\"address\\\": [\\n                    {\\n                        \\\"text\\\": \\\"#39 Kalena Agrahara, Kamanahalli, Bengaluru - 560056\\\",\\n                        \\\"city\\\": \\\"Bengaluru\\\",\\n                        \\\"state\\\": \\\"Karnataka\\\",\\n                        \\\"postalCode\\\": \\\"560056\\\",\\n                        \\\"country\\\": \\\"India\\\"\\n                    }\\n                ]\\n            }\\n        },\\n        {\\n            \\\"fullUrl\\\": \\\"Coverage/COVERAGE1\\\",\\n            \\\"resource\\\": {\\n                \\\"resourceType\\\": \\\"Coverage\\\",\\n                \\\"id\\\": \\\"COVERAGE1\\\",\\n                \\\"meta\\\": {\\n                    \\\"profile\\\": [\\n                        \\\"https://ig.hcxprotocol.io/v0.7.1/StructureDefinition-Coverage.html\\\"\\n                    ]\\n                },\\n                \\\"identifier\\\": [\\n                    {\\n                        \\\"system\\\": \\\"https://www.gicofIndia.in/policies\\\",\\n                        \\\"value\\\": \\\"policy-RVH1003\\\"\\n                    }\\n                ],\\n                \\\"status\\\": \\\"active\\\",\\n                \\\"subscriber\\\": {\\n                    \\\"reference\\\": \\\"Patient/RVH1003\\\"\\n                },\\n                \\\"subscriberId\\\": \\\"ABCD1234\\\",\\n                \\\"beneficiary\\\": {\\n                    \\\"reference\\\": \\\"Patient/RVH1003\\\"\\n                },\\n                \\\"relationship\\\": {\\n                    \\\"coding\\\": [\\n                        {\\n                            \\\"system\\\": \\\"http://terminology.hl7.org/CodeSystem/subscriber-relationship\\\",\\n                            \\\"code\\\": \\\"self\\\"\\n                        }\\n                    ]\\n                },\\n                \\\"payor\\\": [\\n                    {\\n                        \\\"reference\\\": \\\"Organization/GICOFINDIA\\\"\\n                    }\\n                ]\\n            }\\n        },\\n        {\\n            \\\"fullUrl\\\": \\\"Practitioner/PractitionerViswasKar\\\",\\n            \\\"resource\\\": {\\n                \\\"resourceType\\\": \\\"Practitioner\\\",\\n                \\\"id\\\": \\\"PractitionerViswasKar\\\",\\n                \\\"meta\\\": {\\n                    \\\"profile\\\": [\\n                        \\\"https://nrces.in/ndhm/fhir/r4/StructureDefinition/Practitioner\\\"\\n                    ]\\n                },\\n                \\\"identifier\\\": [\\n                    {\\n                        \\\"type\\\": {\\n                            \\\"coding\\\": [\\n                                {\\n                                    \\\"system\\\": \\\"http://terminology.hl7.org/CodeSystem/v2-0203\\\",\\n                                    \\\"code\\\": \\\"MD\\\",\\n                                    \\\"display\\\": \\\"Medical License number\\\"\\n                                }\\n                            ]\\n                        },\\n                        \\\"system\\\": \\\"http://abdm.gov.in/facilities\\\",\\n                        \\\"value\\\": \\\"DOC-123/456\\\"\\n                    }\\n                ],\\n                \\\"name\\\": [\\n                    {\\n                        \\\"text\\\": \\\"Dr Viswas kar\\\"\\n                    }\\n                ]\\n            }\\n        }\\n    ]\\n}\"\n" +
                "`}");
        return JSONUtils.serialize(obj);
    }

    protected String getPayerCoverageEligibilityRejectSuccessRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("request_id", "a16cd71c-159b-4e62-a2e3-6684341b3570");
        obj.put("recipient_code", "payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getBspSenderRequestListRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("sender_code", "bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("app", "ABSP");
        return JSONUtils.serialize(obj);
    }
    protected String getBspSenderRequestListExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("sender_code", "bsp_bsprol_846730@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }


    protected String getBspListExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        return JSONUtils.serialize(obj);
    }

    protected String getBspListMobileExceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("mobile","9620499129");
        return JSONUtils.serialize(obj);
    }

    protected String getBspMobileRequestListRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("mobile", "9620499129");
        obj.put("app", "ABSP");
        return JSONUtils.serialize(obj);
    }

    protected String getBspWorkflowRequestListRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("workflow_id", "7a549702-ddb2-4e72-ac21-438d1fe3c439");
        obj.put("app", "ABSP");
        return JSONUtils.serialize(obj);
    }

    protected String getBspWorkflowRequestListEceptionRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("workflow_id", "7a549702-ddb2-4e72-ac21-438d1fe3c439");
        return JSONUtils.serialize(obj);
    }

    protected String getCreateCommunicationOtpRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("request_id","9537fcef-7ce5-444d-8b7e-87dde997b8f2");
        obj.put("type","otp");
        obj.put("recipientCode","payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("participantCode","bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("password","Opensaber@123");
        return JSONUtils.serialize(obj);
    }

    protected String getCreateCommunicationBankDetailsRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("request_id","9537fcef-7ce5-444d-8b7e-87dde997b8f2");
        obj.put("type","bank_details");
        obj.put("recipientCode","payr_hcxmoc_903588@swasth-hcx-dev");
        obj.put("participantCode","bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("password","Opensaber@123");
        return JSONUtils.serialize(obj);
    }

    protected String getCreateCommunicationExceptionRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        return JSONUtils.serialize(obj);
    }

    protected String getCreateCommunicationValidateKeyExceptionRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("request_id","9537fcef-7ce5-444d-8b7e-87dde997d1f2");
        return JSONUtils.serialize(obj);
    }

    protected String getVerifyOtpRequestBody() throws JsonProcessingException {
        Map<String , Object> obj = new HashMap<>();
        obj.put("mobile","9620499129");
        obj.put("otp_code","8765");
        return JSONUtils.serialize(obj);
    }
    protected String getSendOtpRequestBody() throws JsonProcessingException {
        Map<String ,Object> obj = new HashMap<>();
        obj.put("mobile","9620499129");
        return JSONUtils.serialize(obj);
    }

    protected String getSendOtpExceptionRequestBody() throws JsonProcessingException {
        Map<String ,Object> obj = new HashMap<>();
        return JSONUtils.serialize(obj);
    }

    protected String getCheckCommunicationMissingRequestIdRequestBody() throws JsonProcessingException {
        Map<String ,Object> obj =new HashMap<>();
        return JSONUtils.serialize(obj);
    }

    protected String getCheckCommunicationClaimIdDOesnotExistsInDbRequestBody() throws JsonProcessingException {
        Map<String ,Object> obj =new HashMap<>();
        obj.put("request_id","9537fcef-7ce5-444d-8b7e-87dde997b8f2");
        return JSONUtils.serialize(obj);
    }

    protected String getConsultationAddRequestBody() throws JsonProcessingException {
        Map<String, Object> obj = new HashMap<>();
        obj.put("workflow_id", "7a549702-ddb2-4e72-ac21-438d1fe3c439");
        obj.put("treatment_type", "OPD");
        obj.put("service_type", "consultation");
        obj.put("symptoms", "fever");
        List<String> supporting_documents_url = new ArrayList<>();
        supporting_documents_url.add("http://123.com");
        supporting_documents_url.add("http://456.com");
        obj.put("supporting_documents_url", supporting_documents_url);
        return JSONUtils.serialize(obj);
    }

    protected String getConsultationAddFailRequestBody() throws JsonProcessingException {
        Map<String, Object> obj = new HashMap<>();
        obj.put("treatment_type", "OPD");
        obj.put("service_type", "consultation");
        obj.put("symptoms", "fever");
        List<String> supporting_documents_url = new ArrayList<>();
        supporting_documents_url.add("http://123.com");
        supporting_documents_url.add("http://456.com");
        obj.put("supporting_documents_url", supporting_documents_url);
        return JSONUtils.serialize(obj);
    }

    protected String getConsultationAddExceptionRequestBody() throws JsonProcessingException {
        Map<String, Object> obj = new HashMap<>();
        obj.put("workflow_id", "123");
        obj.put("treatment_type", "OPD");
        return JSONUtils.serialize(obj);
    }


    protected String getOnCommunicationRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id","a16cd71c-159b-4e62-a2e3-6684341b3570");
        obj.put("mobile","9620499129");
        obj.put("otp_code","169923");
        obj.put("type","otp");
        obj.put("participantCode","bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("password","Opensaber@123");
        obj.put("recipientCode","payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getOnCommunicationInvaildRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id","a16cd71c-159b-4e62-a2e3-6684341b3570");
        obj.put("mobile","9620499129");
        obj.put("otp_code","16923");
        obj.put("type","otp");
        obj.put("participantCode","bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("password","Opensaber@123");
        obj.put("recipientCode","payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    protected String getOnCommunicationBankDetailsRequestBody() throws JsonProcessingException {
        Map<String,Object> obj = new HashMap<>();
        obj.put("request_id","a16cd71c-159b-4e62-a2e3-6684341b3570");
        obj.put("mobile","9620499129");
        obj.put("otp_code","169923");
        obj.put("type","bank_details");
        obj.put("participantCode","bsp_bsprol_846730@swasth-hcx-dev");
        obj.put("password","Opensaber@123");
        obj.put("recipientCode","payr_hcxmoc_903588@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }

    public static List<MultipartFile> getUploadDocumentsRequestBody() throws IOException {
        List<MultipartFile> files = new ArrayList<>();
        MockMultipartFile file1 = new MockMultipartFile(
                "file", "document1.txt", MediaType.TEXT_PLAIN_VALUE, "".getBytes());
        files.add(file1);
        return files;
    }

    public static String getUploadDocumentMobile() {
        return "9620499134";
    }

    public  String getNotificationListRequestBody() throws JsonProcessingException {
        Map<String , Object>  obj = new HashMap<>();
        obj.put("participant_role","bsp");
        return JSONUtils.serialize(obj);
    }

    public  String getNotificationListParticipantCodeRequestBody() throws JsonProcessingException {
        Map<String , Object>  obj = new HashMap<>();
        obj.put("participant_code","bsp_bsprol_846730@swasth-hcx-dev");
        return JSONUtils.serialize(obj);
    }
    public  String getNotificationNotifyRequestBody() throws JsonProcessingException {
        Map<String , Object>  obj = new HashMap<>();
        obj.put("payload","eyJhbGciOiJSUzI1NiIsIngtaGN4LW5vdGlmaWNhdGlvbl9oZWFkZXJzIjp7InJlY2lwaWVudF90eXBlIjoicGFydGljaXBhbnRfcm9sZSIsInJlY2lwaWVudHMiOlsiYnNwIl0sIngtaGN4LWNvcnJlbGF0aW9uX2lkIjoiMDE1ZDdiMDQtZjUzNC00ODA5LTg5YWMtNDRhZWQxODQ5ZGQxIiwic2VuZGVyX2NvZGUiOiJoY3hnYXRld2F5LnN3YXN0aEBzd2FzdGgtaGN4LWRldiIsInRpbWVzdGFtcCI6MTcwNjUwMzk5MzI5Nn0sImtpZCI6InBoaElzZWxmckgyQmMybklNZ1FoUjZCUjZyZVI0ckVCd3lON2NlekFHX0kifQ.eyJ0b3BpY19jb2RlIjoibm90aWYtbmV3LW5ldHdvcmstZmVhdHVyZS1hZGRlZCIsIm1lc3NhZ2UiOiJTd2FzdGgtSENYIG5vdyBzdXBwb3J0cyB2MC45IG9uIGl0cyBwbGF0Zm9ybS4gQWxsIHBhcnRpY2lwYW50cyBjYW4gbm93IGluaXRpYXRlIHRyYW5zYWN0aW9ucyByZWxhdGluZyB0byB2MC45LiJ9.fzcOjO9JDIKpG9AMX_kS9QcIzMFW_sy01RWBbKDb008Zq63BltkMZpxVCN0dFMGM32pSG824EbbxzilP0aQsDrHo6z7U-3yOMs3P38jq4DmhqWs6gbnCgPq5mS_jjW_Tn5cn5_dnx_xQo1fRg41RTUN9k5Hv0D5qWhpnCR6vhd3Qa8wax9BS2BzI6FlHOmtlyQ6QvUJRqV57-8GLTMFE_XLkUUgZTUf6-N9Wce_yvIOSS6w07cJF5EQbYFiixvRDSY5nH_pq5jIJu_3ojcLXrlIfQFsRzjoyYBDHTDPSdpwahCVuwmqQg5FoQJv5jUwqKQEK0zqlkc-OPg-QDHEPqw");
        return JSONUtils.serialize(obj);
    }
}
